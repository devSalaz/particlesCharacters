{"version":3,"sources":["assets/img/grey-matter.jpg","assets/img/kame-house.jpg","assets/img/meeseek.jpg","assets/img/monster.jpg","assets/img/psyduck.jpg","assets/img/victreebel.jpg","TransparentFixed.js","components/CamParallax.js","components/Model.js","assets/shaders/vertexShader.js","assets/shaders/fragmentShader.js","assets/models/greyMatter.glb","assets/models/mrMeesek.glb","assets/models/monster.glb","assets/models/psyduck.glb","assets/models/victreebel.glb","assets/models/kameHouse.glb","components/MainScene.js","App.js","reportWebVitals.js","index.js"],"names":["TransparentBackgroundFixedUnrealBloomPass","resolution","strength","radius","threshold","undefined","Vector2","x","y","clearColor","Color","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","Math","round","resy","renderTargetBright","WebGLRenderTarget","texture","name","generateMipmaps","i","renderTargetHorizonal","push","renderTargetVertical","LuminosityHighPassShader","console","error","highPassShader","highPassUniforms","UniformsUtils","clone","uniforms","value","materialHighPassFilter","ShaderMaterial","vertexShader","fragmentShader","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","needsUpdate","bloomTintColors","Vector3","CopyShader","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","enabled","needsSwap","_oldClearColor","oldClearAlpha","basic","MeshBasicMaterial","fsQuad","FullScreenQuad","this","length","dispose","width","height","setSize","renderer","writeBuffer","readBuffer","deltaTime","maskActive","getClearColor","getClearAlpha","oldAutoClear","autoClear","setClearColor","state","buffers","stencil","setTest","renderToScreen","material","map","setRenderTarget","clear","render","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius","KERNEL_RADIUS","SIGMA","colorTexture","texSize","direction","NUM_MIPS","blurTexture1","blurTexture2","blurTexture3","blurTexture4","blurTexture5","dirtTexture","bloomStrength","bloomFactors","bloomRadius","Pass","_instance","bind","mousePos","params","intensity","ease","camera","initZ","position","z","window","addEventListener","onMouseMove","e","clientX","innerWidth","clientY","innerHeight","lookAt","Model","obj","meshName","file","scene","groupObjects","group","loadOnStart","particleIntensity","color1","color2","isAdd","currentIndex","myIndex","numParticles","scaleDK","scaleMB","rotateOnEntry","loadingManager","loader","GLTFLoader","init","load","response","THREE","color","wireframe","mesh","geometry","traverse","child","scale","set","particlesMaterial","size","sampler","MeshSurfaceSampler","build","particlesGeometry","particlesPosition","Float32Array","particlesRandom","newPosition","sample","random","setAttribute","particlesShader","uPixelRatio","min","devicePixelRatio","uTime","uIntensity","uColor1","uColor2","uScale","uSMultiplier","particles","addModel","resizeCanvas","add","gsap","fromTo","rotation","PI","duration","pop","to","onComplete","remove","time","index","clock","isPlane","isLoaded","container","loadContainer","loadBar","setTimeout","classList","itemUrl","itemsLoaded","itemsTotal","progressRatio","style","transform","CamParallax","raycaster","currentIntersect","event","setFromCamera","intersectObjects","document","body","cursor","intersects","intersectedName","object","open","focus","antialias","alpha","shadowMap","type","physicallyCorrectLights","outputEncoding","toneMapping","toneMappingExposure","setPixelRatio","RenderTargetClass","getPixelRatio","capabilities","isWebGL2","renderTarget","encoding","effectComposer","EffectComposer","renderPass","RenderPass","addPass","unrealBloomPass","UnrealBloomPass","plane","addObjects","appendChild","domElement","update","greyMatter","GreyMatter","kameHouse","KameHouse","mrMeesek","MrMeesek","monster","Monster","psyduck","Psyduck","victrebeel","Victrebeel","removeModel","requestAnimationFrame","getElapsedTime","aspect","updateProjectionMatrix","testFunction","App","SwiperCore","use","EffectCoverflow","Navigation","refContainer","useRef","refLoadContainer","refLoadBar","navigationPrevRef","navigationNextRef","useEffect","MainThree","current","useState","bgState","setBgState","menuState","setMenuState","className","ref","href","target","onClick","modules","Pagination","A11y","spaceBetween","slidesPerView","navigation","prevEl","nextEl","onBeforeInit","swiper","effect","centeredSlides","loop","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","onSlideChange","changeSlider","setSlide","realIndex","src","greyMatter_img","alt","kameHouse_img","meeseek_img","monster_img","psyudck_img","victrebeel_img","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"oQAAe,MAA0B,wCCA1B,MAA0B,uCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,uC,6GCoCnCA,E,kDAuBJ,WAAYC,EAAqBC,EAAkBC,EAAgBC,GAAoB,IAAD,uBACpF,gBAEKF,cAAwBG,IAAbH,EAAyBA,EAAW,EACpD,EAAKC,OAASA,EACd,EAAKC,UAAYA,EACjB,EAAKH,gBACYI,IAAfJ,EACI,IAAIK,KAAQL,EAAWM,EAAGN,EAAWO,GACrC,IAAIF,KAAQ,IAAK,KAGvB,EAAKG,WAAa,IAAIC,IAAM,EAAG,EAAG,GAGlC,IAAMC,EAAO,CACXC,UAAWC,IACXC,UAAWD,IACXE,OAAQC,MAEV,EAAKC,wBAA0B,GAC/B,EAAKC,sBAAwB,GAC7B,EAAKC,MAAQ,EACb,IAAIC,EAAOC,KAAKC,MAAM,EAAKrB,WAAWM,EAAI,GACtCgB,EAAOF,KAAKC,MAAM,EAAKrB,WAAWO,EAAI,GAE1C,EAAKgB,mBAAqB,IAAIC,KAAkBL,EAAMG,EAAMZ,GAC5D,EAAKa,mBAAmBE,QAAQC,KAAO,yBACvC,EAAKH,mBAAmBE,QAAQE,iBAAkB,EAElD,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKV,MAAOU,IAAK,CACnC,IAAMC,EAAwB,IAAIL,KAAkBL,EAAMG,EAAMZ,GAEhEmB,EAAsBJ,QAAQC,KAAO,oBAAsBE,EAC3DC,EAAsBJ,QAAQE,iBAAkB,EAEhD,EAAKX,wBAAwBc,KAAKD,GAElC,IAAME,EAAuB,IAAIP,KAAkBL,EAAMG,EAAMZ,GAE/DqB,EAAqBN,QAAQC,KAAO,oBAAsBE,EAC1DG,EAAqBN,QAAQE,iBAAkB,EAE/C,EAAKV,sBAAsBa,KAAKC,GAEhCZ,EAAOC,KAAKC,MAAMF,EAAO,GAEzBG,EAAOF,KAAKC,MAAMC,EAAO,QAKMlB,IAA7B4B,KACFC,QAAQC,MAAM,4DAEhB,IAAMC,EAAiBH,IACvB,EAAKI,iBAAmBC,KAAcC,MAAMH,EAAeI,UAE3D,EAAKH,iBAAL,oBAA6CI,MAAQrC,EACrD,EAAKiC,iBAAL,YAAqCI,MAAQ,IAE7C,EAAKC,uBAAyB,IAAIC,KAAe,CAC/CH,SAAU,EAAKH,iBACfO,aAAcR,EAAeQ,aAC7BC,eAAgBT,EAAeS,eAC/BC,QAAS,KAIX,EAAKC,uBAAyB,GAC9B,IAAMC,EAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,IACrC5B,EAAOC,KAAKC,MAAM,EAAKrB,WAAWM,EAAI,GACtCgB,EAAOF,KAAKC,MAAM,EAAKrB,WAAWO,EAAI,GAEtC,IAAK,IAAIqB,EAAI,EAAGA,EAAI,EAAKV,MAAOU,IAC9B,EAAKkB,uBAAuBhB,KAC1B,EAAKkB,yBAAyBD,EAAgBnB,KAGhD,EAAKkB,uBAAuBlB,GAAGW,SAA/B,QAAmDC,MAAQ,IAAInC,KAC7Dc,EACAG,GAGFH,EAAOC,KAAKC,MAAMF,EAAO,GAEzBG,EAAOF,KAAKC,MAAMC,EAAO,GAI3B,EAAK2B,kBAAoB,EAAKC,qBAAqB,EAAKhC,OACxD,EAAK+B,kBAAkBV,SAAvB,aAAgDC,MAC9C,EAAKvB,sBAAsB,GAAGQ,QAChC,EAAKwB,kBAAkBV,SAAvB,aAAgDC,MAC9C,EAAKvB,sBAAsB,GAAGQ,QAChC,EAAKwB,kBAAkBV,SAAvB,aAAgDC,MAC9C,EAAKvB,sBAAsB,GAAGQ,QAChC,EAAKwB,kBAAkBV,SAAvB,aAAgDC,MAC9C,EAAKvB,sBAAsB,GAAGQ,QAChC,EAAKwB,kBAAkBV,SAAvB,aAAgDC,MAC9C,EAAKvB,sBAAsB,GAAGQ,QAChC,EAAKwB,kBAAkBV,SAAvB,cAAiDC,MAAQvC,EACzD,EAAKgD,kBAAkBV,SAAvB,YAA+CC,MAAQ,GACvD,EAAKS,kBAAkBE,aAAc,EAGrC,EAAKF,kBAAkBV,SAAvB,aAAgDC,MAD3B,CAAC,EAAK,GAAK,GAAK,GAAK,IAE1C,EAAKY,gBAAkB,CACrB,IAAIC,KAAQ,EAAG,EAAG,GAClB,IAAIA,KAAQ,EAAG,EAAG,GAClB,IAAIA,KAAQ,EAAG,EAAG,GAClB,IAAIA,KAAQ,EAAG,EAAG,GAClB,IAAIA,KAAQ,EAAG,EAAG,IAEpB,EAAKJ,kBAAkBV,SAAvB,gBAAmDC,MACjD,EAAKY,qBAGYhD,IAAfkD,KACFrB,QAAQC,MAAM,8CAGhB,IAAMqB,EAAaD,IA1HiE,OA4HpF,EAAKE,aAAenB,KAAcC,MAAMiB,EAAWhB,UACnD,EAAKiB,aAAL,QAA6BhB,MAAQ,EAErC,EAAKiB,aAAe,IAAIf,KAAe,CACrCH,SAAU,EAAKiB,aACfb,aAAcY,EAAWZ,aACzBC,eAAgBW,EAAWX,eAC3Bc,SAAUC,IACVC,WAAW,EACXC,YAAY,EACZC,aAAa,IAGf,EAAKC,SAAU,EACf,EAAKC,WAAY,EAEjB,EAAKC,eAAiB,IAAIxD,IAC1B,EAAKyD,cAAgB,EAErB,EAAKC,MAAQ,IAAIC,IAEjB,EAAKC,OAAS,IAAIC,IAAe,MAjJmD,E,2CAoJtF,WACE,IAAK,IAAI1C,EAAI,EAAGA,EAAI2C,KAAKvD,wBAAwBwD,OAAQ5C,IACvD2C,KAAKvD,wBAAwBY,GAAG6C,UAGlC,IAAK,IAAI7C,EAAI,EAAGA,EAAI2C,KAAKtD,sBAAsBuD,OAAQ5C,IACrD2C,KAAKtD,sBAAsBW,GAAG6C,UAGhCF,KAAKhD,mBAAmBkD,Y,qBAG1B,SAAQC,EAAeC,GACrB,IAAIxD,EAAOC,KAAKC,MAAMqD,EAAQ,GAC1BpD,EAAOF,KAAKC,MAAMsD,EAAS,GAE/BJ,KAAKhD,mBAAmBqD,QAAQzD,EAAMG,GAEtC,IAAK,IAAIM,EAAI,EAAGA,EAAI2C,KAAKrD,MAAOU,IAC9B2C,KAAKvD,wBAAwBY,GAAGgD,QAAQzD,EAAMG,GAC9CiD,KAAKtD,sBAAsBW,GAAGgD,QAAQzD,EAAMG,GAE5CiD,KAAKzB,uBAAuBlB,GAAGW,SAA/B,QAAmDC,MAAQ,IAAInC,KAC7Dc,EACAG,GAGFH,EAAOC,KAAKC,MAAMF,EAAO,GACzBG,EAAOF,KAAKC,MAAMC,EAAO,K,oBAI7B,SAAOuD,EAAyBC,EAAkBC,EAAmCC,EAAgBC,GACnGJ,EAASK,cAAcX,KAAKN,gBAC5BM,KAAKL,cAAgBW,EAASM,gBAC9B,IAAMC,EAAeP,EAASQ,UAC9BR,EAASQ,WAAY,EAErBR,EAASS,cAAcf,KAAK/D,WAAY,GAEpCyE,GAAYJ,EAASU,MAAMC,QAAQC,QAAQC,SAAQ,GAInDnB,KAAKoB,iBACPpB,KAAKF,OAAOuB,SAAWrB,KAAKJ,MAC5BI,KAAKJ,MAAM0B,IAAMd,EAAWtD,QAE5BoD,EAASiB,gBAAgB,MACzBjB,EAASkB,QACTxB,KAAKF,OAAO2B,OAAOnB,IAKrBN,KAAKnC,iBAAL,SAAkCI,MAAQuC,EAAWtD,QACrD8C,KAAKnC,iBAAL,oBAA6CI,MAAQ+B,KAAKpE,UAC1DoE,KAAKF,OAAOuB,SAAWrB,KAAK9B,uBAE5BoC,EAASiB,gBAAgBvB,KAAKhD,oBAC9BsD,EAASkB,QACTxB,KAAKF,OAAO2B,OAAOnB,GAMnB,IAFA,IAAIoB,EAAoB1B,KAAKhD,mBAEpBK,EAAI,EAAGA,EAAI2C,KAAKrD,MAAOU,IAC9B2C,KAAKF,OAAOuB,SAAWrB,KAAKzB,uBAAuBlB,GAEnD2C,KAAKzB,uBAAuBlB,GAAGW,SAA/B,aAAwDC,MACtDyD,EAAkBxE,QACpB8C,KAAKzB,uBAAuBlB,GAAGW,SAA/B,UAAqDC,MACnDzC,EAA0CmG,eAC5CrB,EAASiB,gBAAgBvB,KAAKvD,wBAAwBY,IACtDiD,EAASkB,QACTxB,KAAKF,OAAO2B,OAAOnB,GAEnBN,KAAKzB,uBAAuBlB,GAAGW,SAA/B,aAAwDC,MACtD+B,KAAKvD,wBAAwBY,GAAGH,QAClC8C,KAAKzB,uBAAuBlB,GAAGW,SAA/B,UAAqDC,MACnDzC,EAA0CoG,eAC5CtB,EAASiB,gBAAgBvB,KAAKtD,sBAAsBW,IACpDiD,EAASkB,QACTxB,KAAKF,OAAO2B,OAAOnB,GAEnBoB,EAAoB1B,KAAKtD,sBAAsBW,GAKjD2C,KAAKF,OAAOuB,SAAWrB,KAAKtB,kBAC5BsB,KAAKtB,kBAAkBV,SAAvB,cAAiDC,MAAQ+B,KAAKtE,SAC9DsE,KAAKtB,kBAAkBV,SAAvB,YAA+CC,MAAQ+B,KAAKrE,OAC5DqE,KAAKtB,kBAAkBV,SAAvB,gBAAmDC,MACjD+B,KAAKnB,gBAEPyB,EAASiB,gBAAgBvB,KAAKvD,wBAAwB,IACtD6D,EAASkB,QACTxB,KAAKF,OAAO2B,OAAOnB,GAInBN,KAAKF,OAAOuB,SAAWrB,KAAKd,aAC5Bc,KAAKf,aAAL,SAA8BhB,MAC5B+B,KAAKvD,wBAAwB,GAAGS,QAE9BwD,GAAYJ,EAASU,MAAMC,QAAQC,QAAQC,SAAQ,GAEnDnB,KAAKoB,gBACPd,EAASiB,gBAAgB,MACzBvB,KAAKF,OAAO2B,OAAOnB,KAEnBA,EAASiB,gBAAgBf,GACzBR,KAAKF,OAAO2B,OAAOnB,IAKrBA,EAASS,cAAcf,KAAKN,eAAgBM,KAAKL,eACjDW,EAASQ,UAAYD,I,sCAGvB,SAAyBgB,GACvB,OAAO,IAAI1D,KAAe,CACxBG,QAAS,CACPwD,cAAeD,EACfE,MAAOF,GAGT7D,SAAU,CACRgE,aAAc,CAAE/D,MAAO,MACvBgE,QAAS,CAAEhE,MAAO,IAAInC,KAAQ,GAAK,KACnCoG,UAAW,CAAEjE,MAAO,IAAInC,KAAQ,GAAK,MAGvCsC,aAAa,gKAMbC,eAAe,qlC,kCA6BnB,SAAqB1B,GACnB,OAAO,IAAIwB,KAAe,CACxBG,QAAS,CACP6D,SAAUxF,GAGZqB,SAAU,CACRoE,aAAc,CAAEnE,MAAO,MACvBoE,aAAc,CAAEpE,MAAO,MACvBqE,aAAc,CAAErE,MAAO,MACvBsE,aAAc,CAAEtE,MAAO,MACvBuE,aAAc,CAAEvE,MAAO,MACvBwE,YAAa,CAAExE,MAAO,MACtByE,cAAe,CAAEzE,MAAO,GACxB0E,aAAc,CAAE1E,MAAO,MACvBY,gBAAiB,CAAEZ,MAAO,MAC1B2E,YAAa,CAAE3E,MAAO,IAGxBG,aAAa,gKAMbC,eAAe,itC,GA/WmCwE,KAyYxDrH,EAA0CmG,eAAiB,IAAI7F,KAAQ,EAAK,GAC5EN,EAA0CoG,eAAiB,IAAI9F,KAAQ,EAAK,G,UCrY7DgH,EADG,I,WAvChB,aAAe,oBACb9C,KAAK+C,OACL/C,KAAKgD,SAAW,CAAEjH,EAAG,EAAGC,EAAG,GAC3BgE,KAAKiD,OAAS,CACZC,UAAW,KACXC,KAAM,K,wCAIV,SAAKC,GACHpD,KAAKoD,OAASA,EACdpD,KAAKqD,MAAQrD,KAAKoD,OAAOE,SAASC,EAClCC,OAAOC,iBAAiB,YAAazD,KAAK0D,e,yBAG5C,SAAYC,GACV3D,KAAKgD,SAASjH,GACX4H,EAAEC,QAAUJ,OAAOK,WAAa,GAAK7D,KAAKiD,OAAOC,UACpDlD,KAAKgD,SAAShH,GACX2H,EAAEG,QAAUN,OAAOO,YAAc,GAAK/D,KAAKiD,OAAOC,UAEjDlD,KAAKgD,SAAShH,GADH,MACegE,KAAKgD,SAAShH,GAD7B,O,oBAIjB,WACEgE,KAAKoD,OAAOE,SAASvH,IAClBiE,KAAKgD,SAASjH,EAAIiE,KAAKoD,OAAOE,SAASvH,GAAKiE,KAAKiD,OAAOE,KAC3DnD,KAAKoD,OAAOE,SAAStH,IAClBgE,KAAKgD,SAAShH,EAAIgE,KAAKoD,OAAOE,SAAStH,GAAKgE,KAAKiD,OAAOE,KAC3DnD,KAAKoD,OAAOE,SAASC,IAClBvD,KAAKqD,MAAQrD,KAAKoD,OAAOE,SAASC,GAAKvD,KAAKiD,OAAOE,KACtDnD,KAAKoD,OAAOY,OAAO,EAAG,EAAG,K,kBAG3B,WACEhE,KAAK0D,YAAc1D,KAAK0D,YAAYX,KAAK/C,U,8BC6K9BiE,E,WAxMb,WAAYC,GAAM,oBAChBlE,KAAK7C,KAAO+G,EAAIC,SAChBnE,KAAKoE,KAAOF,EAAIE,KAChBpE,KAAKqE,MAAQH,EAAIG,MACjBrE,KAAKsE,aAAeJ,EAAIK,MACxBvE,KAAKwE,YAAcN,EAAIM,YACvBxE,KAAKyE,kBAAoBP,EAAIO,kBAC7BzE,KAAK0E,OAASR,EAAIQ,OAClB1E,KAAK2E,OAAST,EAAIS,OAClB3E,KAAK4E,OAAQ,EACb5E,KAAK6E,aAAe,EACpB7E,KAAK8E,QAAUZ,EAAIY,QACnB9E,KAAK+E,aAAeb,EAAIa,aACxB/E,KAAKgF,QAAUd,EAAIc,QACnBhF,KAAKiF,QAAUf,EAAIe,QACnBjF,KAAKkF,cAAgBhB,EAAIgB,cACzBlF,KAAKmF,eAAiBjB,EAAIiB,eAC1BnF,KAAKoF,OAAS,IAAIC,IAAWrF,KAAKmF,gBAElCnF,KAAKsF,O,wCAGP,WAAQ,IAAD,OACLtF,KAAK+C,OACL/C,KAAKoF,OAAOG,KAAKvF,KAAKoE,MAAM,SAACoB,GAG3B,EAAKnE,SAAW,IAAIoE,IAAwB,CAC1CC,MAAO,SACPC,WAAW,EACXxG,SAAUsG,MAGZ,EAAKG,KAAO,KACZ,EAAKC,SAAW,KAEhBL,EAASnB,MAAMyB,UAAS,SAACC,GACnBA,EAAM5I,MAAQ,EAAKA,OACrB,EAAKyI,KAAOG,EACZ,EAAKH,KAAKvE,SAAW,EAAKA,UAGPoE,OAMvB,EAAKG,KAAKI,MAAMC,IAAI,IAAK,IAAK,KAG9B,EAAKC,kBAAoB,IAAIT,KAAqB,CAChDC,MAAO,MACPS,KAAM,MAIR,EAAKN,SAAW,EAAKD,KAAKC,SAI1B,IAAMO,EAAU,IAAIC,IAAmB,EAAKT,MAAMU,QAClD,EAAKC,kBAAoB,IAAId,IAI7B,IAHA,IAAMe,EAAoB,IAAIC,aAAiC,EAApB,EAAK1B,cAC1C2B,EAAkB,IAAID,aAAiC,EAApB,EAAK1B,cAErC1H,EAAI,EAAGA,EAAI,EAAK0H,aAAc1H,IAAK,CAC1C,IAAMsJ,EAAc,IAAIlB,KACxBW,EAAQQ,OAAOD,GACfH,EAAkBP,IAChB,CAACU,EAAY5K,EAAG4K,EAAY3K,EAAG2K,EAAYpD,GACvC,EAAJlG,GAGFqJ,EAAgBT,IACd,CAAiB,EAAhBpJ,KAAKgK,SAAe,EAAmB,EAAhBhK,KAAKgK,SAAe,EAAmB,EAAhBhK,KAAKgK,SAAe,GAC/D,EAAJxJ,GAIJ,EAAKkJ,kBAAkBO,aACrB,WACA,IAAIrB,IAAsBe,EAAmB,IAG/C,EAAKD,kBAAkBO,aACrB,UACA,IAAIrB,IAAsBiB,EAAiB,IAG7C,EAAKK,gBAAkB,IAAItB,KAAqB,CAC9CzH,SAAU,CACRgJ,YAAa,CAAE/I,MAAOpB,KAAKoK,IAAIzD,OAAO0D,iBAAkB,IACxDC,MAAO,CAAElJ,MAAO,GAChBmJ,WAAY,CAAEnJ,MAAO,EAAKwG,mBAC1B4C,QAAS,CAAEpJ,MAAO,EAAKyG,QACvB4C,QAAS,CAAErJ,MAAO,EAAK0G,QACvB4C,OAAQ,CAAEtJ,MAAO,GACjBuJ,aAAc,CAAEvJ,MAAO,KAEzBG,aC7GM,y3BD8GNC,eE9GM,uoBF+GNkB,aAAa,EACbJ,SAAUsG,IACVnG,YAAY,EACZD,WAAW,IAIb,EAAKoI,UAAY,IAAIhC,KACnB,EAAKc,kBACL,EAAKQ,iBAGP,EAAKU,UAAUtK,KAAO,EAAKA,KAE3B,EAAKsK,UAAUzB,MAAMC,IAAI,EAAKjB,QAAS,EAAKA,QAAS,EAAKA,SAEtD,EAAKR,aACP,EAAKkD,WAEPlE,OAAOC,iBAAiB,SAAU,EAAKkE,mB,sBAI3C,WACgBnE,OAAOK,WAErB7D,KAAKsE,aAAa/G,KAAKyC,KAAKyH,WAC5BzH,KAAKqE,MAAMuD,IAAI5H,KAAKyH,WACfzH,KAAKkF,eACR2C,IAAKC,OACH9H,KAAKyH,UAAUM,SACf,CACE/L,EAAGa,KAAKmL,IAEV,CACEhM,EAAG,EACHiM,SAAU,IACV9E,KAAM,eAKZnD,KAAK4E,OAAQ,EACb5E,KAAK2H,eACLE,IAAKC,OACH9H,KAAK+G,gBAAgB/I,SAASuJ,OAC9B,CAAEtJ,MAAO,GACT,CAAEA,MAAO,EAAGgK,SAAU,EAAK9E,KAAM,iB,yBAIrC,WAAe,IAAD,OACZnD,KAAKsE,aAAa4D,MACdlI,KAAK4E,OACPiD,IAAKM,GAAGnI,KAAK+G,gBAAgB/I,SAASuJ,OAAQ,CAC5CtJ,MAAO,EACPgK,SAAU,EACV9E,KAAM,aACNiF,WAAY,WAKN,EAAKvD,cAAgB,EAAKC,UAC5B,EAAKT,MAAMgE,OAAO,EAAKZ,WACvB,EAAK7C,OAAQ,Q,0BAOvB,WACE,IAAMzE,EAAQqD,OAAOK,WAEjB7D,KAAK4E,QACHzE,EAAQ,MACVH,KAAKyH,UAAUzB,MAAMC,IAAIjG,KAAKiF,QAASjF,KAAKiF,QAASjF,KAAKiF,SAC1DjF,KAAK+G,gBAAgB/I,SAASwJ,aAAavJ,MAAQ,IAEnD+B,KAAKyH,UAAUzB,MAAMC,IAAIjG,KAAKgF,QAAShF,KAAKgF,QAAShF,KAAKgF,SAC1DhF,KAAK+G,gBAAgB/I,SAASwJ,aAAavJ,MAAQ,O,oBAKzD,SAAOqK,EAAMC,GACXvI,KAAK6E,aAAe0D,EAChBvI,KAAK4E,QACP5E,KAAK+G,gBAAgB/I,SAASmJ,MAAMlJ,MAAQqK,K,kBAIhD,WACEtI,KAAK2H,aAAe3H,KAAK2H,aAAa5E,KAAK/C,U,KG7MhC,MAA0B,uCCA1B,MAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,uCCA1B,MAA0B,sCCoc1B8C,EADG,I,WA7ahB,aAAe,oBACb9C,KAAK+C,OACL/C,KAAKoD,OAAS,EACdpD,KAAKqE,MAAQ,EACbrE,KAAKM,SAAW,EAChBN,KAAKwI,MAAQ,IAAI/C,IACjBzF,KAAKyI,SAAU,EACfzI,KAAK0I,UAAW,EAChB1I,KAAKuI,MAAQ,E,wCAGf,SAAKI,EAAWC,EAAeC,GAAU,IAAD,OAEtC7I,KAAKqE,MAAQ,IAAIoB,KAEjBzF,KAAKmF,eAAiB,IAAIM,KAExB,WACEjC,OAAOsF,YAAW,WAChBF,EAAcG,UAAUnB,IAAI,YAC3B,SAIL,SAACoB,EAASC,EAAaC,GACrB,IAAMC,EAAgBF,EAAcC,EACpCL,EAAQO,MAAMC,UAAd,iBAAoCF,EAApC,QAKJnJ,KAAKoD,OAAS,IAAIqC,IAChB,GACAjC,OAAOK,WAAaL,OAAOO,YAC3B,GACA,KAEF/D,KAAKoD,OAAOE,SAAS2C,IAAI,EAAG,EAAG,GAC/BqD,EAAYhE,KAAKtF,KAAKoD,QAGtBpD,KAAKgD,SAAW,IAAIyC,KACpBzF,KAAKuJ,UAAY,IAAI9D,KACrBzF,KAAKsE,aAAe,GACpBtE,KAAKwJ,iBAAmB,KAExBhG,OAAOC,iBAAiB,aAAa,SAACgG,GACpC,EAAKzG,SAASjH,EAAK0N,EAAM7F,QAAUJ,OAAOK,WAAc,EAAI,EAC5D,EAAKb,SAAShH,GAAMyN,EAAM3F,QAAUN,OAAOO,YAAe,EAAI,EAE9D,EAAKwF,UAAUG,cAAc,EAAK1G,SAAU,EAAKI,QAC9B,EAAKmG,UAAUI,iBAAiB,EAAKrF,cAEzCrE,OACb2J,SAASC,KAAKT,MAAMU,OAAS,UAE7BF,SAASC,KAAKT,MAAMU,OAAS,UAIjCnB,EAAUlF,iBAAiB,SAAS,SAACgG,GACnC,EAAKzG,SAASjH,EAAK0N,EAAM7F,QAAUJ,OAAOK,WAAc,EAAI,EAC5D,EAAKb,SAAShH,GAAMyN,EAAM3F,QAAUN,OAAOO,YAAe,EAAI,EAE9D,EAAKwF,UAAUG,cAAc,EAAK1G,SAAU,EAAKI,QACjD,IAAM2G,EAAa,EAAKR,UAAUI,iBAAiB,EAAKrF,cAExD,GAAIyF,EAAW9J,OAAQ,CACrB,IAAI+J,EAAkBD,EAAW,GAAGE,OAAO9M,KAInB,YAApB6M,EACFxG,OACG0G,KACC,gFACA,UAEDC,QAC0B,eAApBH,EACTxG,OACG0G,KACC,8EACA,UAEDC,QAC0B,gBAApBH,EACTxG,OACG0G,KACC,8EACA,UAEDC,QAC0B,iBAApBH,EACTxG,OACG0G,KACC,mFACA,UAEDC,QAC0B,aAApBH,EACTxG,OACG0G,KACC,2EACA,UAEDC,QAC0B,YAApBH,GACTxG,OACG0G,KACC,8EACA,UAEDC,YAMTnK,KAAKM,SAAW,IAAImF,KAAoB,CACtC2E,WAAW,EACXC,OAAO,IAETrK,KAAKM,SAASgK,UAAU9K,SAAU,EAClCQ,KAAKM,SAASgK,UAAUC,KAAO9E,IAC/BzF,KAAKM,SAASkK,yBAA0B,EACxCxK,KAAKM,SAASmK,eAAiBhF,KAC/BzF,KAAKM,SAASoK,YAAcjF,KAC5BzF,KAAKM,SAASqK,oBAAsB,IACpC3K,KAAKM,SAASD,QAAQmD,OAAOK,WAAYL,OAAOO,aAChD/D,KAAKM,SAASsK,cAAc/N,KAAKoK,IAAIzD,OAAO0D,iBAAkB,IAE9DlH,KAAKM,SAASS,cAAc,EAAU,GAKtC,IAAI8J,EAAoB,KAMtBA,EAHkC,IAAlC7K,KAAKM,SAASwK,iBACd9K,KAAKM,SAASyK,aAAaC,SAEPvF,KAGAA,KAItBzF,KAAKiL,aAAe,IAAIJ,EAAkB,IAAK,IAAK,CAClDzO,UAAWqJ,IACXnJ,UAAWmJ,IACXlJ,OAAQkJ,KACRyF,SAAUzF,KACV4E,OAAO,IAITrK,KAAKmL,eAAiB,IAAIC,IAAepL,KAAKM,SAAUN,KAAKiL,cAC7DjL,KAAKmL,eAAeP,cAAc/N,KAAKoK,IAAIzD,OAAO0D,iBAAkB,IACpElH,KAAKmL,eAAe9K,QAAQmD,OAAOK,WAAYL,OAAOO,aAGtD/D,KAAKqL,WAAa,IAAIC,IAAWtL,KAAKqE,MAAOrE,KAAKoD,QAClDpD,KAAKmL,eAAeI,QAAQvL,KAAKqL,YAEjCrL,KAAKwL,gBAAkB,IAAIC,EAC3BzL,KAAKwL,gBAAgBhM,SAAU,EAC/BQ,KAAKmL,eAAeI,QAAQvL,KAAKwL,iBAE7BhI,OAAOK,WAAa,IACtB7D,KAAKwL,gBAAgB9P,SAAW,GAEhCsE,KAAKwL,gBAAgB9P,SAAW,EAElCsE,KAAKwL,gBAAgB7P,OAAS,GAC9BqE,KAAKwL,gBAAgB5P,UAAY,EAEjCoE,KAAKqB,SAAW,IAAIoE,IAAwB,CAC1CC,MAAO,SACPC,WAAW,IAEb3F,KAAK6F,SAAW,IAAIJ,IAAkB,EAAG,EAAG,EAAG,GAAI,GAAI,IAEvDzF,KAAK0L,MAAQ,IAAIjG,IAAWzF,KAAK6F,SAAU7F,KAAKqB,UAGhDrB,KAAKyI,SAAU,EAGfjF,OAAOC,iBAAiB,SAAUzD,KAAK2H,cACvC3H,KAAK2L,aACL3L,KAAKsI,KAAO,EAEZK,EAAUiD,YAAY5L,KAAKM,SAASuL,YACpC7L,KAAK8L,W,0BAGP,WACM9L,KAAKyI,U,wBAKX,WACEzI,KAAK+L,WAAa,IAAI9H,EAAM,CAC1BE,SAAU,UACVC,KAAM4H,EACN3H,MAAOrE,KAAKqE,MACZE,MAAOvE,KAAKsE,aACZE,aAAa,EACbC,kBAAmB,KACnBC,OAAQ,IAAIe,IAAY,WACxBd,OAAQ,IAAIc,IAAY,WACxBX,QAAS,EACTC,aAAc,KACdC,QAAS,IACTC,QAAS,IACTE,eAAgBnF,KAAKmF,iBAGvBnF,KAAKiM,UAAY,IAAIhI,EAAM,CACzBE,SAAU,aACVC,KAAM8H,EACN7H,MAAOrE,KAAKqE,MACZE,MAAOvE,KAAKsE,aACZG,kBAAmB,KACnBC,OAAQ,IAAIe,IAAY,WACxBd,OAAQ,IAAIc,IAAY,WACxBX,QAAS,EACTC,aAAc,IACdC,QAAS,IACTC,QAAS,IACTC,eAAe,EACfC,eAAgBnF,KAAKmF,iBAGvBnF,KAAKmM,SAAW,IAAIlI,EAAM,CACxBE,SAAU,cACVC,KAAMgI,EACN/H,MAAOrE,KAAKqE,MACZE,MAAOvE,KAAKsE,aACZG,kBAAmB,KACnBC,OAAQ,IAAIe,IAAY,WACxBd,OAAQ,IAAIc,IAAY,WACxBX,QAAS,EACTC,aAAc,KACdC,QAAS,IACTC,QAAS,IACTE,eAAgBnF,KAAKmF,iBAGvBnF,KAAKqM,QAAU,IAAIpI,EAAM,CACvBE,SAAU,eACVC,KAAMkI,EACNjI,MAAOrE,KAAKqE,MACZE,MAAOvE,KAAKsE,aACZG,kBAAmB,KACnBC,OAAQ,IAAIe,IAAY,WACxBd,OAAQ,IAAIc,IAAY,WACxBX,QAAS,EACTC,aAAc,KACdC,QAAS,IACTC,QAAS,IACTE,eAAgBnF,KAAKmF,iBAGvBnF,KAAKuM,QAAU,IAAItI,EAAM,CACvBE,SAAU,WACVC,KAAMoI,EACNnI,MAAOrE,KAAKqE,MACZE,MAAOvE,KAAKsE,aACZG,kBAAmB,KACnBC,OAAQ,IAAIe,IAAY,WACxBd,OAAQ,IAAIc,IAAY,WACxBX,QAAS,EACTC,aAAc,KACdC,QAAS,IACTC,QAAS,IACTE,eAAgBnF,KAAKmF,iBAGvBnF,KAAKyM,WAAa,IAAIxI,EAAM,CAC1BE,SAAU,UACVC,KAAMsI,EACNrI,MAAOrE,KAAKqE,MACZE,MAAOvE,KAAKsE,aACZG,kBAAmB,IACnBC,OAAQ,IAAIe,IAAY,WACxBd,OAAQ,IAAIc,IAAY,WACxBX,QAAS,EACTC,aAAc,KACdC,QAAS,IACTC,QAAS,IACTE,eAAgBnF,KAAKmF,iBAEvBnF,KAAK0I,UAAW,I,0BAGlB,SAAaH,GAGX,GAFAvI,KAAKuI,MAAQA,EAETvI,KAAK0I,SACP,OAAQH,GACN,KAAK,EACC/E,OAAOK,WAAa,IACtB7D,KAAKwL,gBAAgB9P,SAAW,GAEhCsE,KAAKwL,gBAAgB9P,SAAW,EAElCsE,KAAKwL,gBAAgB7P,OAAS,GAC9BqE,KAAKiM,UAAUU,cACf3M,KAAKmM,SAASQ,cACd3M,KAAKqM,QAAQM,cACb3M,KAAKuM,QAAQI,cACb3M,KAAKyM,WAAWE,cAChB3M,KAAK+L,WAAWrE,WAChB,MACF,KAAK,EACClE,OAAOK,WAAa,IACtB7D,KAAKwL,gBAAgB9P,SAAW,GAEhCsE,KAAKwL,gBAAgB9P,SAAW,EAElCsE,KAAKwL,gBAAgB7P,OAAS,GAC9BqE,KAAK+L,WAAWY,cAChB3M,KAAKmM,SAASQ,cACd3M,KAAKqM,QAAQM,cACb3M,KAAKuM,QAAQI,cACb3M,KAAKyM,WAAWE,cAChB3M,KAAKiM,UAAUvE,WACf,MACF,KAAK,EACClE,OAAOK,WAAa,IACtB7D,KAAKwL,gBAAgB9P,SAAW,GAEhCsE,KAAKwL,gBAAgB9P,SAAW,EAElCsE,KAAKwL,gBAAgB7P,OAAS,GAC9BqE,KAAK+L,WAAWY,cAChB3M,KAAKiM,UAAUU,cACf3M,KAAKqM,QAAQM,cACb3M,KAAKuM,QAAQI,cACb3M,KAAKyM,WAAWE,cAChB3M,KAAKmM,SAASzE,WACd,MAEF,KAAK,EACClE,OAAOK,WAAa,IACtB7D,KAAKwL,gBAAgB9P,SAAW,GAEhCsE,KAAKwL,gBAAgB9P,SAAW,IAElCsE,KAAKwL,gBAAgB7P,OAAS,GAC9BqE,KAAK+L,WAAWY,cAChB3M,KAAKiM,UAAUU,cACf3M,KAAKmM,SAASQ,cACd3M,KAAKuM,QAAQI,cACb3M,KAAKyM,WAAWE,cAChB3M,KAAKqM,QAAQ3E,WACb,MAEF,KAAK,EACClE,OAAOK,WAAa,IACtB7D,KAAKwL,gBAAgB9P,SAAW,IAEhCsE,KAAKwL,gBAAgB9P,SAAW,IAElCsE,KAAKwL,gBAAgB7P,OAAS,GAC9BqE,KAAK+L,WAAWY,cAChB3M,KAAKiM,UAAUU,cACf3M,KAAKmM,SAASQ,cACd3M,KAAKqM,QAAQM,cACb3M,KAAKyM,WAAWE,cAChB3M,KAAKuM,QAAQ7E,WACb,MAEF,KAAK,EACClE,OAAOK,WAAa,IACtB7D,KAAKwL,gBAAgB9P,SAAW,GAEhCsE,KAAKwL,gBAAgB9P,SAAW,IAElCsE,KAAKwL,gBAAgB7P,OAAS,GAC9BqE,KAAK+L,WAAWY,cAChB3M,KAAKiM,UAAUU,cACf3M,KAAKmM,SAASQ,cACd3M,KAAKqM,QAAQM,cACb3M,KAAKuM,QAAQI,cACb3M,KAAKyM,WAAW/E,c,oBASxB,WACEkF,sBAAsB5M,KAAK8L,OAAO/I,KAAK/C,OACvCA,KAAKsI,KAAOtI,KAAKwI,MAAMqE,iBACvB7M,KAAK+L,WAAWD,OAAO9L,KAAKsI,KAAMtI,KAAKuI,OACvCvI,KAAKiM,UAAUH,OAAO9L,KAAKsI,KAAMtI,KAAKuI,OACtCvI,KAAKmM,SAASL,OAAO9L,KAAKsI,KAAMtI,KAAKuI,OACrCvI,KAAKqM,QAAQP,OAAO9L,KAAKsI,KAAMtI,KAAKuI,OACpCvI,KAAKuM,QAAQT,OAAO9L,KAAKsI,KAAMtI,KAAKuI,OACpCvI,KAAKyM,WAAWX,OAAO9L,KAAKsI,KAAMtI,KAAKuI,OACvCe,EAAYwC,SAEZ9L,KAAKmL,eAAe1J,W,0BAGtB,WACEzB,KAAKM,SAASD,QAAQmD,OAAOK,WAAYL,OAAOO,aAChD/D,KAAKoD,OAAO0J,OAAStJ,OAAOK,WAAaL,OAAOO,YAChD/D,KAAKoD,OAAO2J,yBACZ/M,KAAKmL,eAAe9K,QAAQmD,OAAOK,WAAYL,OAAOO,e,kBAGxD,WACE/D,KAAK2H,aAAe3H,KAAK2H,aAAa5E,KAAK/C,MAC3CA,KAAK8L,OAAS9L,KAAK8L,OAAO/I,KAAK/C,MAC/BA,KAAKsF,KAAOtF,KAAKsF,KAAKvC,KAAK/C,MAC3BA,KAAKgN,aAAehN,KAAKgN,aAAajK,KAAK/C,MAC3CA,KAAK2L,WAAa3L,KAAK2L,WAAW5I,KAAK/C,U,6CCE5BiN,MA/Yf,WACEC,IAAWC,IAAI,CAACC,IAAiBC,MAEjC,IAAMC,EAAeC,iBAAO,MACtBC,EAAmBD,iBAAO,MAC1BE,EAAaF,iBAAO,MACpBG,EAAoBH,iBAAO,MAC3BI,EAAoBJ,iBAAO,MAEjCK,qBAAU,WAERC,EAAUvI,KACRgI,EAAaQ,QACbN,EAAiBM,QACjBL,EAAWK,WAGZ,IAEH,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAyCA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKC,IAAKb,EAAkBY,UAAU,mBAAtC,UACE,4CACA,yDACA,qBAAKA,UAAU,cAAf,SACE,qBAAKC,IAAKZ,EAAYW,UAAU,aAIpC,qBAAKC,IAAKf,EAAcc,UAAU,qBAClC,sBACEA,UACEF,EAAS,8BACkBF,GADlB,sBAEUA,GAJvB,UAOE,sBAAKI,UAAU,YAAf,UACE,cAAC,IAAD,CAAYA,UAAU,OAAOjI,KAAK,WAClC,oBAAGmI,KAAK,4CAA4CC,OAAO,SAA3D,qBACW,UAGb,sBAAKH,UAAU,YAAf,UACE,cAAC,IAAD,CAAcA,UAAU,OAAOjI,KAAK,WACpC,oBAAGmI,KAAK,qCAAqCC,OAAO,SAApD,uBACa,UAGf,sBAAKH,UAAU,YAAf,UACE,cAAC,IAAD,CAAUA,UAAU,OAAOjI,KAAK,WAChC,oBAAGmI,KAAK,8BAA8BC,OAAO,SAA7C,mBACS,UAGX,sBAAKH,UAAU,YAAf,UACE,cAAC,IAAD,CAAaA,UAAU,OAAOjI,KAAK,WACnC,mBAAGmI,KAAK,sCAAsCC,OAAO,SAArD,6BAKJ,uBAAMH,UAAWJ,EAAjB,UACE,gCACE,2CACCE,EACC,cAAC,IAAD,CACE/H,KAAK,SACLiI,UAAU,YACVI,QAAS,kBAAML,GAAcD,MAG/B,cAAC,IAAD,CACE/H,KAAK,SACLiI,UAAU,YACVI,QAAS,kBAAML,GAAcD,MAIjC,+BACE,6BACE,mBACEI,KAAK,4CACLC,OAAO,SAFT,SAIE,cAAC,IAAD,CAAYpI,KAAK,SAASiI,UAAS,mBAAcJ,SAGrD,6BACE,mBAAGM,KAAK,qCAAqCC,OAAO,SAApD,SACE,cAAC,IAAD,CAAcpI,KAAK,SAASiI,UAAS,mBAAcJ,SAGvD,6BACE,mBAAGM,KAAK,8BAA8BC,OAAO,SAA7C,SACE,cAAC,IAAD,CAAUpI,KAAK,SAASiI,UAAS,mBAAcJ,SAGnD,6BACE,mBAAGM,KAAK,sCAAsCC,OAAO,SAArD,SACE,cAAC,IAAD,CAAapI,KAAK,SAASiI,UAAS,mBAAcJ,eAK1D,oCACE,sBAAKI,UAAU,qBAAf,UACE,sBACEA,UACc,OAAZJ,EAAmB,uBAAyB,gBAFhD,UAKE,6CACA,2NAGiE,IAC/D,+BACE,mBACEI,UAAU,UACVE,KAAK,4CACLC,OAAO,SAHT,0BAQF,uBACA,uBAdF,eAgBE,uBAhBF,wBAoBF,sBACEH,UACc,OAAZJ,EAAmB,uBAAyB,gBAFhD,UAKE,4CACA,iMAGqC,IACnC,+BACE,mBACEI,UAAU,UACVE,KAAK,4CACLC,OAAO,SAHT,0BAQF,uBACA,uBAdF,eAgBE,uBAhBF,yBAoBF,sBACEH,UACc,OAAZJ,EAAmB,uBAAyB,gBAFhD,UAKE,2CACA,iPAIwB,IACtB,+BACE,mBACEI,UAAU,UACVE,KAAK,4CACLC,OAAO,SAHT,0BAQF,uBACA,uBAfF,eAiBE,uBAjBF,yBAqBF,sBACEH,UACc,OAAZJ,EAAmB,uBAAyB,gBAFhD,UAKE,8CACA,0MAG6C,IAC3C,+BACE,mBACEI,UAAU,UACVE,KAAK,4CACLC,OAAO,SAHT,0BAQF,uBACA,uBAdF,eAgBE,uBAhBF,yBAoBF,sBACEH,UACc,OAAZJ,EAAmB,uBAAyB,gBAFhD,UAKE,yCACA,4JAE8D,IAC5D,+BACE,mBACEI,UAAU,UACVE,KAAK,4CACLC,OAAO,SAHT,0BAQF,uBACA,uBAbF,gBAeE,uBAfF,yBAmBF,sBACEH,UACc,OAAZJ,EAAmB,uBAAyB,gBAFhD,UAKE,4CACA,gMAGqC,IACnC,+BACE,mBACEI,UAAU,UACVE,KAAK,4CACLC,OAAO,SAHT,0BAQF,uBACA,uBAdF,eAgBE,uBAhBF,yBAsBJ,sBAAKH,UAAU,mBAAf,UACE,2CACY,IACV,+BACE,mBACEA,UAAS,sBAAiBJ,GAC1BM,KAAK,4CACLC,OAAO,SAHT,oCASJ,sBAAKH,UAAW,mBAAhB,UACE,qBAAKC,IAAKX,EAAmBU,UAAS,qBAAgBJ,GAAtD,SACE,cAAC,IAAD,CACE7H,KAAK,SACLiI,UAAS,sBAAiBJ,OAG9B,sBAAKK,IAAKV,EAAmBS,UAAS,sBAAiBJ,GAAvD,UACG,IACD,cAAC,IAAD,CACE7H,KAAK,SACLiI,UAAS,sBAAiBJ,QAG9B,eAAC,IAAD,CACES,QAAS,CAACpB,IAAYqB,IAAYtB,IAAiBuB,KACnDC,aAAc,EACdC,cAAe,OACfC,WAAY,CACVC,OAAQrB,EAAkBI,QAC1BkB,OAAQrB,EAAkBG,SAE5BmB,aAAc,SAACC,GACbA,EAAOjM,OAAO6L,WAAWC,OAASrB,EAAkBI,QACpDoB,EAAOjM,OAAO6L,WAAWE,OAASrB,EAAkBG,SAEtDqB,OAAQ,YACRC,gBAAgB,EAChBC,MAAM,EACNC,gBAAiB,CACfC,OAAQ,GACRC,QAAS,EACTC,MAAO,IACPC,SAAU,EACVC,cAAc,GAEhBC,cAAe,SAACV,GAAD,OA9UZ,SAAC3G,GAGhB,OAFAsF,EAAUb,eAEFzE,GACN,KAAK,EACH0F,EAAW,MAEX,MACF,KAAK,EACHA,EAAW,MAEX,MACF,KAAK,EACHA,EAAW,MAEX,MAEF,KAAK,EACHA,EAAW,MAEX,MAEF,KAAK,EACHA,EAAW,MAEX,MAEF,KAAK,EACHA,EAAW,MAQfJ,EAAUgC,aAAatH,GA0SgBuH,CAASZ,EAAOa,YAtB7C,UAyBE,cAAC,IAAD,UACE,qBACE3B,UAAU,YACV4B,IAAKC,EACLC,IAAI,kBAGR,cAAC,IAAD,UACE,qBACE9B,UAAU,YACV4B,IAAKG,EACLD,IAAI,iBAGR,cAAC,IAAD,UACE,qBAAK9B,UAAU,YAAY4B,IAAKI,EAAaF,IAAI,cAEnD,cAAC,IAAD,UACE,qBAAK9B,UAAU,YAAY4B,IAAKK,EAAaH,IAAI,cAEnD,cAAC,IAAD,UACE,qBAAK9B,UAAU,YAAY4B,IAAKM,EAAaJ,IAAI,cAEnD,cAAC,IAAD,UACE,qBACE9B,UAAU,YACV4B,IAAKO,EACLL,IAAI,oCCxaTM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASxP,OACP,cAAC,IAAMyP,WAAP,UACE,cAAC,EAAD,MAEFtH,SAASuH,eAAe,SAM1BX,M","file":"static/js/main.7b120668.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/grey-matter.dbf9643d.jpg\";","export default __webpack_public_path__ + \"static/media/kame-house.ea3056a4.jpg\";","export default __webpack_public_path__ + \"static/media/meeseek.6e331d4b.jpg\";","export default __webpack_public_path__ + \"static/media/monster.fb9a032f.jpg\";","export default __webpack_public_path__ + \"static/media/psyduck.4ed783e7.jpg\";","export default __webpack_public_path__ + \"static/media/victreebel.29f1209c.jpg\";","   \r\nimport {\r\n  AdditiveBlending,\r\n  Color,\r\n  LinearFilter,\r\n  MeshBasicMaterial,\r\n  RGBAFormat,\r\n  ShaderMaterial,\r\n  Texture,\r\n  UniformsUtils,\r\n  Vector2,\r\n  Vector3,\r\n  WebGLRenderer,\r\n  WebGLRenderTarget,\r\n} from \"three\";\r\n\r\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass\";\r\n\r\n// typescript definitions doesn't have FullScreenQuad\r\n//@ts-ignore\r\nimport { FullScreenQuad } from \"three/examples/jsm/postprocessing/Pass\";\r\n\r\nimport { CopyShader } from \"three/examples/jsm/shaders/CopyShader.js\";\r\nimport { LuminosityHighPassShader } from \"three/examples/jsm/shaders/LuminosityHighPassShader.js\";\r\n\r\n/**\r\n * Thanks to https://github.com/mrdoob/three.js/issues/14104#issuecomment-429664412 for this fragmentShaderfix\r\n * \r\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\r\n * mip map chain of bloom textures and blurs them with different radii. Because\r\n * of the weighted combination of mips, and because larger blurs are done on\r\n * higher mips, this effect provides good quality and performance.\r\n *\r\n * Reference:\r\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\r\n */\r\nclass TransparentBackgroundFixedUnrealBloomPass extends Pass {\r\n  strength: number;\r\n  radius: number;\r\n  threshold: number;\r\n  resolution: Vector2;\r\n  clearColor: Color;\r\n  renderTargetsHorizontal: any[];\r\n  renderTargetsVertical: any[];\r\n  nMips: number;\r\n  renderTargetBright: WebGLRenderTarget;\r\n  highPassUniforms: any;\r\n  materialHighPassFilter: ShaderMaterial;\r\n  separableBlurMaterials: any[];\r\n  compositeMaterial: ShaderMaterial;\r\n  bloomTintColors: Vector3[];\r\n  copyUniforms: any;\r\n  materialCopy: ShaderMaterial;\r\n  _oldClearColor: Color;\r\n  oldClearAlpha: number;\r\n  basic: MeshBasicMaterial;\r\n  fsQuad: Pass.FullScreenQuad;\r\n  static BlurDirectionX: any;\r\n  static BlurDirectionY: any;\r\n  constructor(resolution: Vector2, strength: number, radius: number, threshold: number) {\r\n    super();\r\n\r\n    this.strength = strength !== undefined ? strength : 1;\r\n    this.radius = radius;\r\n    this.threshold = threshold;\r\n    this.resolution =\r\n      resolution !== undefined\r\n        ? new Vector2(resolution.x, resolution.y)\r\n        : new Vector2(256, 256);\r\n\r\n    // create color only once here, reuse it later inside the render function\r\n    this.clearColor = new Color(0, 0, 0);\r\n\r\n    // render targets\r\n    const pars = {\r\n      minFilter: LinearFilter,\r\n      magFilter: LinearFilter,\r\n      format: RGBAFormat,\r\n    };\r\n    this.renderTargetsHorizontal = [];\r\n    this.renderTargetsVertical = [];\r\n    this.nMips = 5;\r\n    let resx = Math.round(this.resolution.x / 2);\r\n    let resy = Math.round(this.resolution.y / 2);\r\n\r\n    this.renderTargetBright = new WebGLRenderTarget(resx, resy, pars);\r\n    this.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\r\n    this.renderTargetBright.texture.generateMipmaps = false;\r\n\r\n    for (let i = 0; i < this.nMips; i++) {\r\n      const renderTargetHorizonal = new WebGLRenderTarget(resx, resy, pars);\r\n\r\n      renderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\r\n      renderTargetHorizonal.texture.generateMipmaps = false;\r\n\r\n      this.renderTargetsHorizontal.push(renderTargetHorizonal);\r\n\r\n      const renderTargetVertical = new WebGLRenderTarget(resx, resy, pars);\r\n\r\n      renderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\r\n      renderTargetVertical.texture.generateMipmaps = false;\r\n\r\n      this.renderTargetsVertical.push(renderTargetVertical);\r\n\r\n      resx = Math.round(resx / 2);\r\n\r\n      resy = Math.round(resy / 2);\r\n    }\r\n\r\n    // luminosity high pass material\r\n\r\n    if (LuminosityHighPassShader === undefined)\r\n      console.error(\"THREE.UnrealBloomPass relies on LuminosityHighPassShader\");\r\n\r\n    const highPassShader = LuminosityHighPassShader;\r\n    this.highPassUniforms = UniformsUtils.clone(highPassShader.uniforms);\r\n\r\n    this.highPassUniforms[\"luminosityThreshold\"].value = threshold;\r\n    this.highPassUniforms[\"smoothWidth\"].value = 0.01;\r\n\r\n    this.materialHighPassFilter = new ShaderMaterial({\r\n      uniforms: this.highPassUniforms,\r\n      vertexShader: highPassShader.vertexShader,\r\n      fragmentShader: highPassShader.fragmentShader,\r\n      defines: {},\r\n    });\r\n\r\n    // Gaussian Blur Materials\r\n    this.separableBlurMaterials = [];\r\n    const kernelSizeArray = [3, 5, 7, 9, 11];\r\n    resx = Math.round(this.resolution.x / 2);\r\n    resy = Math.round(this.resolution.y / 2);\r\n\r\n    for (let i = 0; i < this.nMips; i++) {\r\n      this.separableBlurMaterials.push(\r\n        this.getSeperableBlurMaterial(kernelSizeArray[i])\r\n      );\r\n\r\n      this.separableBlurMaterials[i].uniforms[\"texSize\"].value = new Vector2(\r\n        resx,\r\n        resy\r\n      );\r\n\r\n      resx = Math.round(resx / 2);\r\n\r\n      resy = Math.round(resy / 2);\r\n    }\r\n\r\n    // Composite material\r\n    this.compositeMaterial = this.getCompositeMaterial(this.nMips);\r\n    this.compositeMaterial.uniforms[\"blurTexture1\"].value =\r\n      this.renderTargetsVertical[0].texture;\r\n    this.compositeMaterial.uniforms[\"blurTexture2\"].value =\r\n      this.renderTargetsVertical[1].texture;\r\n    this.compositeMaterial.uniforms[\"blurTexture3\"].value =\r\n      this.renderTargetsVertical[2].texture;\r\n    this.compositeMaterial.uniforms[\"blurTexture4\"].value =\r\n      this.renderTargetsVertical[3].texture;\r\n    this.compositeMaterial.uniforms[\"blurTexture5\"].value =\r\n      this.renderTargetsVertical[4].texture;\r\n    this.compositeMaterial.uniforms[\"bloomStrength\"].value = strength;\r\n    this.compositeMaterial.uniforms[\"bloomRadius\"].value = 0.1;\r\n    this.compositeMaterial.needsUpdate = true;\r\n\r\n    const bloomFactors = [1.0, 0.8, 0.6, 0.4, 0.2];\r\n    this.compositeMaterial.uniforms[\"bloomFactors\"].value = bloomFactors;\r\n    this.bloomTintColors = [\r\n      new Vector3(1, 1, 1),\r\n      new Vector3(1, 1, 1),\r\n      new Vector3(1, 1, 1),\r\n      new Vector3(1, 1, 1),\r\n      new Vector3(1, 1, 1),\r\n    ];\r\n    this.compositeMaterial.uniforms[\"bloomTintColors\"].value =\r\n      this.bloomTintColors;\r\n\r\n    // copy material\r\n    if (CopyShader === undefined) {\r\n      console.error(\"THREE.UnrealBloomPass relies on CopyShader\");\r\n    }\r\n\r\n    const copyShader = CopyShader;\r\n\r\n    this.copyUniforms = UniformsUtils.clone(copyShader.uniforms);\r\n    this.copyUniforms[\"opacity\"].value = 1.0;\r\n\r\n    this.materialCopy = new ShaderMaterial({\r\n      uniforms: this.copyUniforms,\r\n      vertexShader: copyShader.vertexShader,\r\n      fragmentShader: copyShader.fragmentShader,\r\n      blending: AdditiveBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n      transparent: true,\r\n    });\r\n\r\n    this.enabled = true;\r\n    this.needsSwap = false;\r\n\r\n    this._oldClearColor = new Color();\r\n    this.oldClearAlpha = 1;\r\n\r\n    this.basic = new MeshBasicMaterial();\r\n\r\n    this.fsQuad = new FullScreenQuad(null);\r\n  }\r\n\r\n  dispose() {\r\n    for (let i = 0; i < this.renderTargetsHorizontal.length; i++) {\r\n      this.renderTargetsHorizontal[i].dispose();\r\n    }\r\n\r\n    for (let i = 0; i < this.renderTargetsVertical.length; i++) {\r\n      this.renderTargetsVertical[i].dispose();\r\n    }\r\n\r\n    this.renderTargetBright.dispose();\r\n  }\r\n\r\n  setSize(width: number, height: number) {\r\n    let resx = Math.round(width / 2);\r\n    let resy = Math.round(height / 2);\r\n\r\n    this.renderTargetBright.setSize(resx, resy);\r\n\r\n    for (let i = 0; i < this.nMips; i++) {\r\n      this.renderTargetsHorizontal[i].setSize(resx, resy);\r\n      this.renderTargetsVertical[i].setSize(resx, resy);\r\n\r\n      this.separableBlurMaterials[i].uniforms[\"texSize\"].value = new Vector2(\r\n        resx,\r\n        resy\r\n      );\r\n\r\n      resx = Math.round(resx / 2);\r\n      resy = Math.round(resy / 2);\r\n    }\r\n  }\r\n\r\n  render(renderer: WebGLRenderer, writeBuffer: any, readBuffer: { texture: Texture; }, deltaTime: any, maskActive: any) {\r\n    renderer.getClearColor(this._oldClearColor);\r\n    this.oldClearAlpha = renderer.getClearAlpha();\r\n    const oldAutoClear = renderer.autoClear;\r\n    renderer.autoClear = false;\r\n\r\n    renderer.setClearColor(this.clearColor, 0);\r\n\r\n    if (maskActive) renderer.state.buffers.stencil.setTest(false);\r\n\r\n    // Render input to screen\r\n\r\n    if (this.renderToScreen) {\r\n      this.fsQuad.material = this.basic;\r\n      this.basic.map = readBuffer.texture;\r\n\r\n      renderer.setRenderTarget(null);\r\n      renderer.clear();\r\n      this.fsQuad.render(renderer);\r\n    }\r\n\r\n    // 1. Extract Bright Areas\r\n\r\n    this.highPassUniforms[\"tDiffuse\"].value = readBuffer.texture;\r\n    this.highPassUniforms[\"luminosityThreshold\"].value = this.threshold;\r\n    this.fsQuad.material = this.materialHighPassFilter;\r\n\r\n    renderer.setRenderTarget(this.renderTargetBright);\r\n    renderer.clear();\r\n    this.fsQuad.render(renderer);\r\n\r\n    // 2. Blur All the mips progressively\r\n\r\n    let inputRenderTarget = this.renderTargetBright;\r\n\r\n    for (let i = 0; i < this.nMips; i++) {\r\n      this.fsQuad.material = this.separableBlurMaterials[i];\r\n\r\n      this.separableBlurMaterials[i].uniforms[\"colorTexture\"].value =\r\n        inputRenderTarget.texture;\r\n      this.separableBlurMaterials[i].uniforms[\"direction\"].value =\r\n        TransparentBackgroundFixedUnrealBloomPass.BlurDirectionX;\r\n      renderer.setRenderTarget(this.renderTargetsHorizontal[i]);\r\n      renderer.clear();\r\n      this.fsQuad.render(renderer);\r\n\r\n      this.separableBlurMaterials[i].uniforms[\"colorTexture\"].value =\r\n        this.renderTargetsHorizontal[i].texture;\r\n      this.separableBlurMaterials[i].uniforms[\"direction\"].value =\r\n        TransparentBackgroundFixedUnrealBloomPass.BlurDirectionY;\r\n      renderer.setRenderTarget(this.renderTargetsVertical[i]);\r\n      renderer.clear();\r\n      this.fsQuad.render(renderer);\r\n\r\n      inputRenderTarget = this.renderTargetsVertical[i];\r\n    }\r\n\r\n    // Composite All the mips\r\n\r\n    this.fsQuad.material = this.compositeMaterial;\r\n    this.compositeMaterial.uniforms[\"bloomStrength\"].value = this.strength;\r\n    this.compositeMaterial.uniforms[\"bloomRadius\"].value = this.radius;\r\n    this.compositeMaterial.uniforms[\"bloomTintColors\"].value =\r\n      this.bloomTintColors;\r\n\r\n    renderer.setRenderTarget(this.renderTargetsHorizontal[0]);\r\n    renderer.clear();\r\n    this.fsQuad.render(renderer);\r\n\r\n    // Blend it additively over the input texture\r\n\r\n    this.fsQuad.material = this.materialCopy;\r\n    this.copyUniforms[\"tDiffuse\"].value =\r\n      this.renderTargetsHorizontal[0].texture;\r\n\r\n    if (maskActive) renderer.state.buffers.stencil.setTest(true);\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.setRenderTarget(null);\r\n      this.fsQuad.render(renderer);\r\n    } else {\r\n      renderer.setRenderTarget(readBuffer);\r\n      this.fsQuad.render(renderer);\r\n    }\r\n\r\n    // Restore renderer settings\r\n\r\n    renderer.setClearColor(this._oldClearColor, this.oldClearAlpha);\r\n    renderer.autoClear = oldAutoClear;\r\n  }\r\n\r\n  getSeperableBlurMaterial(kernelRadius: number) {\r\n    return new ShaderMaterial({\r\n      defines: {\r\n        KERNEL_RADIUS: kernelRadius,\r\n        SIGMA: kernelRadius,\r\n      },\r\n\r\n      uniforms: {\r\n        colorTexture: { value: null },\r\n        texSize: { value: new Vector2(0.5, 0.5) },\r\n        direction: { value: new Vector2(0.5, 0.5) },\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `#include <common>\r\n\t\t\t\tvarying vec2 vUv;\r\n\t\t\t\tuniform sampler2D colorTexture;\r\n\t\t\t\tuniform vec2 texSize;\r\n\t\t\t\tuniform vec2 direction;\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\r\n\t\t\t\t}\r\n\t\t\t\tvoid main() {\\n\\\r\n          vec2 invSize = 1.0 / texSize;\\\r\n          float fSigma = float(SIGMA);\\\r\n          float weightSum = gaussianPdf(0.0, fSigma);\\\r\n          float alphaSum = 0.0;\\\r\n          vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\r\n          for( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\r\n            float x = float(i);\\\r\n            float w = gaussianPdf(x, fSigma);\\\r\n            vec2 uvOffset = direction * invSize * x;\\\r\n            vec4 sample1 = texture2D( colorTexture, vUv + uvOffset);\\\r\n            vec4 sample2 = texture2D( colorTexture, vUv - uvOffset);\\\r\n            diffuseSum += (sample1.rgb + sample2.rgb) * w;\\\r\n            alphaSum += (sample1.a + sample2.a) * w;\\\r\n            weightSum += 2.0 * w;\\\r\n          }\\\r\n          gl_FragColor = vec4(diffuseSum/weightSum, alphaSum/weightSum);\\n\\\r\n        }`,\r\n    });\r\n  }\r\n\r\n  getCompositeMaterial(nMips: number) {\r\n    return new ShaderMaterial({\r\n      defines: {\r\n        NUM_MIPS: nMips,\r\n      },\r\n\r\n      uniforms: {\r\n        blurTexture1: { value: null },\r\n        blurTexture2: { value: null },\r\n        blurTexture3: { value: null },\r\n        blurTexture4: { value: null },\r\n        blurTexture5: { value: null },\r\n        dirtTexture: { value: null },\r\n        bloomStrength: { value: 1.0 },\r\n        bloomFactors: { value: null },\r\n        bloomTintColors: { value: null },\r\n        bloomRadius: { value: 0.0 },\r\n      },\r\n\r\n      vertexShader: `varying vec2 vUv;\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tvUv = uv;\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\t\t\t\t}`,\r\n\r\n      fragmentShader: `varying vec2 vUv;\r\n\t\t\t\tuniform sampler2D blurTexture1;\r\n\t\t\t\tuniform sampler2D blurTexture2;\r\n\t\t\t\tuniform sampler2D blurTexture3;\r\n\t\t\t\tuniform sampler2D blurTexture4;\r\n\t\t\t\tuniform sampler2D blurTexture5;\r\n\t\t\t\tuniform sampler2D dirtTexture;\r\n\t\t\t\tuniform float bloomStrength;\r\n\t\t\t\tuniform float bloomRadius;\r\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\r\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\r\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\r\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\r\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\r\n\t\t\t\t}\r\n\t\t\t\tvoid main() {\r\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\r\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\r\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\r\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\r\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\r\n\t\t\t\t}`,\r\n    });\r\n  }\r\n}\r\n\r\nTransparentBackgroundFixedUnrealBloomPass.BlurDirectionX = new Vector2(1.0, 0.0);\r\nTransparentBackgroundFixedUnrealBloomPass.BlurDirectionY = new Vector2(0.0, 1.0);\r\n\r\nexport { TransparentBackgroundFixedUnrealBloomPass as UnrealBloomPass };\r\n","class CamParallax {\r\n  constructor() {\r\n    this.bind();\r\n    this.mousePos = { x: 0, y: 0 };\r\n    this.params = {\r\n      intensity: 0.004,\r\n      ease: 0.08,\r\n    };\r\n  }\r\n\r\n  init(camera) {\r\n    this.camera = camera;\r\n    this.initZ = this.camera.position.z;\r\n    window.addEventListener(\"mousemove\", this.onMouseMove);\r\n  }\r\n\r\n  onMouseMove(e) {\r\n    this.mousePos.x =\r\n      (e.clientX - window.innerWidth / 2) * this.params.intensity;\r\n    this.mousePos.y =\r\n      (e.clientY - window.innerHeight / 2) * this.params.intensity;\r\n    const yLimit = -3.4;\r\n    if (this.mousePos.y < yLimit) this.mousePos.y = yLimit;\r\n  }\r\n\r\n  update() {\r\n    this.camera.position.x +=\r\n      (this.mousePos.x - this.camera.position.x) * this.params.ease;\r\n    this.camera.position.y +=\r\n      (this.mousePos.y - this.camera.position.y) * this.params.ease;\r\n    this.camera.position.z +=\r\n      (this.initZ - this.camera.position.z) * this.params.ease;\r\n    this.camera.lookAt(0, 0, 0);\r\n  }\r\n\r\n  bind() {\r\n    this.onMouseMove = this.onMouseMove.bind(this);\r\n  }\r\n}\r\n\r\nconst _instance = new CamParallax();\r\nexport default _instance;\r\n","import * as THREE from \"three\";\r\nimport gsap from \"gsap\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { MeshSurfaceSampler } from \"three/examples/jsm/math/MeshSurfaceSampler\";\r\n\r\nimport vertexShader from \"../assets/shaders/vertexShader\";\r\nimport fragmentShader from \"../assets/shaders/fragmentShader\";\r\n\r\nclass Model {\r\n  constructor(obj) {\r\n    this.name = obj.meshName;\r\n    this.file = obj.file;\r\n    this.scene = obj.scene;\r\n    this.groupObjects = obj.group;\r\n    this.loadOnStart = obj.loadOnStart;\r\n    this.particleIntensity = obj.particleIntensity;\r\n    this.color1 = obj.color1;\r\n    this.color2 = obj.color2;\r\n    this.isAdd = false;\r\n    this.currentIndex = 0;\r\n    this.myIndex = obj.myIndex;\r\n    this.numParticles = obj.numParticles;\r\n    this.scaleDK = obj.scaleDK;\r\n    this.scaleMB = obj.scaleMB;\r\n    this.rotateOnEntry = obj.rotateOnEntry;\r\n    this.loadingManager = obj.loadingManager;\r\n    this.loader = new GLTFLoader(this.loadingManager);\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.bind();\r\n    this.loader.load(this.file, (response) => {\r\n      //console.log(response);\r\n\r\n      this.material = new THREE.MeshBasicMaterial({\r\n        color: 0xff0000,\r\n        wireframe: true,\r\n        blending: THREE.AdditiveBlending,\r\n      });\r\n\r\n      this.mesh = null;\r\n      this.geometry = null;\r\n\r\n      response.scene.traverse((child) => {\r\n        if (child.name == this.name) {\r\n          this.mesh = child;\r\n          this.mesh.material = this.material;\r\n          //console.log(this.mesh.scale);\r\n        }\r\n        if (child instanceof THREE.Mesh) {\r\n          //console.log(child.name);\r\n        }\r\n      });\r\n\r\n      // this.mesh.material = this.material;\r\n      this.mesh.scale.set(2.4, 2.4, 2.4);\r\n\r\n      //Particles Material\r\n      this.particlesMaterial = new THREE.PointsMaterial({\r\n        color: \"red\",\r\n        size: 0.01,\r\n      });\r\n\r\n      //Geometry\r\n      this.geometry = this.mesh.geometry;\r\n      //console.log(this.geometry);\r\n\r\n      //PArticles Geometry\r\n      const sampler = new MeshSurfaceSampler(this.mesh).build();\r\n      this.particlesGeometry = new THREE.BufferGeometry();\r\n      const particlesPosition = new Float32Array(this.numParticles * 3);\r\n      const particlesRandom = new Float32Array(this.numParticles * 3);\r\n\r\n      for (let i = 0; i < this.numParticles; i++) {\r\n        const newPosition = new THREE.Vector3();\r\n        sampler.sample(newPosition);\r\n        particlesPosition.set(\r\n          [newPosition.x, newPosition.y, newPosition.z],\r\n          i * 3\r\n        );\r\n\r\n        particlesRandom.set(\r\n          [Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1],\r\n          i * 3\r\n        );\r\n      }\r\n\r\n      this.particlesGeometry.setAttribute(\r\n        \"position\",\r\n        new THREE.BufferAttribute(particlesPosition, 3)\r\n      );\r\n\r\n      this.particlesGeometry.setAttribute(\r\n        \"aRandom\",\r\n        new THREE.BufferAttribute(particlesRandom, 3)\r\n      );\r\n\r\n      this.particlesShader = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n          uPixelRatio: { value: Math.min(window.devicePixelRatio, 2) },\r\n          uTime: { value: 0 },\r\n          uIntensity: { value: this.particleIntensity },\r\n          uColor1: { value: this.color1 },\r\n          uColor2: { value: this.color2 },\r\n          uScale: { value: 0 },\r\n          uSMultiplier: { value: 13 },\r\n        },\r\n        vertexShader: vertexShader,\r\n        fragmentShader: fragmentShader,\r\n        transparent: true,\r\n        blending: THREE.AdditiveBlending,\r\n        depthWrite: false,\r\n        depthTest: false,\r\n      });\r\n\r\n      //Particles\r\n      this.particles = new THREE.Points(\r\n        this.particlesGeometry,\r\n        this.particlesShader\r\n      );\r\n\r\n      this.particles.name = this.name;\r\n\r\n      this.particles.scale.set(this.scaleDK, this.scaleDK, this.scaleDK);\r\n\r\n      if (this.loadOnStart) {\r\n        this.addModel();\r\n      }\r\n      window.addEventListener(\"resize\", this.resizeCanvas);\r\n    });\r\n  }\r\n\r\n  addModel() {\r\n    const width = window.innerWidth;\r\n\r\n    this.groupObjects.push(this.particles);\r\n    this.scene.add(this.particles);\r\n    if (!this.rotateOnEntry) {\r\n      gsap.fromTo(\r\n        this.particles.rotation,\r\n        {\r\n          y: Math.PI,\r\n        },\r\n        {\r\n          y: 0,\r\n          duration: 1.2,\r\n          ease: \"power3.out\",\r\n        }\r\n      );\r\n    }\r\n\r\n    this.isAdd = true;\r\n    this.resizeCanvas();\r\n    gsap.fromTo(\r\n      this.particlesShader.uniforms.uScale,\r\n      { value: 0 },\r\n      { value: 1, duration: 1.0, ease: \"power3.out\" }\r\n    );\r\n  }\r\n\r\n  removeModel() {\r\n    this.groupObjects.pop(); // ['Bob', 'Willy']\r\n    if (this.isAdd) {\r\n      gsap.to(this.particlesShader.uniforms.uScale, {\r\n        value: 0,\r\n        duration: 1.0,\r\n        ease: \"power3.out\",\r\n        onComplete: () => {\r\n          // if (!this.isAdd) {\r\n\r\n          // }\r\n\r\n          if (this.currentIndex != this.myIndex) {\r\n            this.scene.remove(this.particles);\r\n            this.isAdd = false;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  resizeCanvas() {\r\n    const width = window.innerWidth;\r\n\r\n    if (this.isAdd) {\r\n      if (width < 1026) {\r\n        this.particles.scale.set(this.scaleMB, this.scaleMB, this.scaleMB);\r\n        this.particlesShader.uniforms.uSMultiplier.value = 9;\r\n      } else {\r\n        this.particles.scale.set(this.scaleDK, this.scaleDK, this.scaleDK);\r\n        this.particlesShader.uniforms.uSMultiplier.value = 13;\r\n      }\r\n    }\r\n  }\r\n\r\n  update(time, index) {\r\n    this.currentIndex = index;\r\n    if (this.isAdd) {\r\n      this.particlesShader.uniforms.uTime.value = time;\r\n    }\r\n  }\r\n\r\n  bind() {\r\n    this.resizeCanvas = this.resizeCanvas.bind(this);\r\n  }\r\n}\r\n\r\nexport default Model;\r\n","export default `\r\n\r\n  attribute vec3 aRandom;\r\n  uniform float uPixelRatio;\r\n  uniform float uTime;\r\n  uniform float uIntensity;\r\n  uniform float uScale;\r\n  uniform float uSMultiplier;\r\n  varying vec2 vUv;\r\n  varying vec3 vPosition;\r\n\r\n\r\n  void main() {\r\n\r\n    vUv = uv;\r\n    vPosition = position;\r\n\r\n    vec3 pos = position;\r\n\r\n    pos.x += sin(uTime * aRandom.x) * uIntensity;\r\n    pos.y += sin(uTime * aRandom.y) * uIntensity;\r\n    pos.z += sin(uTime * aRandom.z) * uIntensity;\r\n\r\n    pos.x *= uScale +( 3. * sin(pos.y * 4. + uTime) * (1. - uScale));\r\n    pos.y *= uScale +( 3. * cos(pos.z * 4. + uTime) * (1. - uScale));\r\n    pos.z *= uScale +( 3. * sin(pos.x * 4. + uTime) * (1. - uScale));\r\n\r\n    pos *= uScale; \r\n\r\n    vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );\r\n    gl_Position = projectionMatrix * mvPosition;\r\n    gl_PointSize = uPixelRatio * uSMultiplier / -mvPosition.z;\r\n  }\r\n\r\n`;\r\n","export default `\r\n\r\n  uniform vec3 uColor1;\r\n  uniform vec3 uColor2;\r\n  varying vec2 vUv;\r\n  varying vec3 vPosition;\r\n\r\n  void main() {\r\n\r\n    float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\r\n    float strength = 0.05 / distanceToCenter - 0.1;\r\n\r\n    vec3 color1 = vec3(1.0, 0.0, 0.0);\r\n    vec3 color2 = vec3(0.0, 0.0, 1.0);\r\n\r\n    float depthX = vPosition.x * 0.5 + 0.5;\r\n    float depthY = vPosition.y * 0.5 + 0.5;\r\n\r\n    vec3 finalColorX = mix(uColor1, uColor2, depthX);\r\n    vec3 finalColorY = mix(uColor1, uColor2, depthY);\r\n\r\n    vec3 finalColor = mix(finalColorX, finalColorY, 0.5);\r\n\r\n    gl_FragColor = vec4(finalColor, strength);\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/greyMatter.488ce535.glb\";","export default __webpack_public_path__ + \"static/media/mrMeesek.9d1dc03d.glb\";","export default __webpack_public_path__ + \"static/media/monster.2f935aa5.glb\";","export default __webpack_public_path__ + \"static/media/psyduck.3c256480.glb\";","export default __webpack_public_path__ + \"static/media/victreebel.aa2176ed.glb\";","export default __webpack_public_path__ + \"static/media/kameHouse.ac94f21e.glb\";","import * as THREE from \"three\";\r\n\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\r\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\r\nimport { DotScreenPass } from \"three/examples/jsm/postprocessing/DotScreenPass.js\";\r\nimport { GlitchPass } from \"three/examples/jsm/postprocessing/GlitchPass.js\";\r\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass.js\";\r\nimport { RGBShiftShader } from \"three/examples/jsm/shaders/RGBShiftShader.js\";\r\nimport { UnrealBloomPass } from \"../TransparentFixed\";\r\nimport { SMAAPass } from \"three/examples/jsm/postprocessing/SMAAPass.js\";\r\n\r\nimport CamParallax from \"./CamParallax\";\r\nimport Model from \"./Model\";\r\nimport GreyMatter from \"../assets/models/greyMatter.glb\";\r\nimport MrMeesek from \"../assets/models/mrMeesek.glb\";\r\nimport Monster from \"../assets/models/monster.glb\";\r\nimport Psyduck from \"../assets/models/psyduck.glb\";\r\nimport Victrebeel from \"../assets/models/victreebel.glb\";\r\nimport KameHouse from \"../assets/models/kameHouse.glb\";\r\n\r\nclass MainScene {\r\n  constructor() {\r\n    this.bind();\r\n    this.camera = 0;\r\n    this.scene = 0;\r\n    this.renderer = 0;\r\n    this.clock = new THREE.Clock();\r\n    this.isPlane = false;\r\n    this.isLoaded = false;\r\n    this.index = 0;\r\n  }\r\n\r\n  init(container, loadContainer, loadBar) {\r\n    //MAIN SCENE INSTANCE\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.loadingManager = new THREE.LoadingManager(\r\n      //Loaded\r\n      () => {\r\n        window.setTimeout(() => {\r\n          loadContainer.classList.add(\"loaded\");\r\n        }, 1500);\r\n      },\r\n\r\n      //Progress\r\n      (itemUrl, itemsLoaded, itemsTotal) => {\r\n        const progressRatio = itemsLoaded / itemsTotal;\r\n        loadBar.style.transform = `scaleX(${progressRatio})`;\r\n      }\r\n    );\r\n\r\n    //CAMERA AND ORBIT CONTROLLER\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    this.camera.position.set(0, 0, 5);\r\n    CamParallax.init(this.camera);\r\n\r\n    //CREATING GROUP OF HOVER OBJECTS\r\n    this.mousePos = new THREE.Vector2();\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.groupObjects = [];\r\n    this.currentIntersect = null;\r\n\r\n    window.addEventListener(\"mousemove\", (event) => {\r\n      this.mousePos.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      this.mousePos.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n      //Raycaster Code\r\n      this.raycaster.setFromCamera(this.mousePos, this.camera);\r\n      const intersects = this.raycaster.intersectObjects(this.groupObjects);\r\n\r\n      if (intersects.length) {\r\n        document.body.style.cursor = \"pointer\";\r\n      } else {\r\n        document.body.style.cursor = \"auto\";\r\n      }\r\n    });\r\n\r\n    container.addEventListener(\"click\", (event) => {\r\n      this.mousePos.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      this.mousePos.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n      //Raycaster Code\r\n      this.raycaster.setFromCamera(this.mousePos, this.camera);\r\n      const intersects = this.raycaster.intersectObjects(this.groupObjects);\r\n\r\n      if (intersects.length) {\r\n        let intersectedName = intersects[0].object.name;\r\n\r\n        //console.log(intersectedName);\r\n\r\n        if (intersectedName === \"GM_Body\") {\r\n          window\r\n            .open(\r\n              \"https://sketchfab.com/3d-models/materia-gris-c3f551011aaf4e7fb36a3d4e7912b5d3\",\r\n              \"_blank\"\r\n            )\r\n            .focus();\r\n        } else if (intersectedName === \"Kame_House\") {\r\n          window\r\n            .open(\r\n              \"https://sketchfab.com/3d-models/kame-house-f2ae2e0f7827499cb64b40f267a82cd5\",\r\n              \"_blank\"\r\n            )\r\n            .focus();\r\n        } else if (intersectedName === \"Meesek_Body\") {\r\n          window\r\n            .open(\r\n              \"https://sketchfab.com/3d-models/mr-meeseks-356fca081a514508bf8d344ec1515d3f\",\r\n              \"_blank\"\r\n            )\r\n            .focus();\r\n        } else if (intersectedName === \"Monster_Body\") {\r\n          window\r\n            .open(\r\n              \"https://sketchfab.com/3d-models/cartoon-monster-677110104468442f9f4ba23b3469eec0\",\r\n              \"_blank\"\r\n            )\r\n            .focus();\r\n        } else if (intersectedName === \"Psy_Body\") {\r\n          window\r\n            .open(\r\n              \"https://sketchfab.com/3d-models/psyduck-6bd718edee504a26922000c546a455a9\",\r\n              \"_blank\"\r\n            )\r\n            .focus();\r\n        } else if (intersectedName === \"VC_Body\") {\r\n          window\r\n            .open(\r\n              \"https://sketchfab.com/3d-models/victreebel-1164197623f84bb4ad5004a5911722f8\",\r\n              \"_blank\"\r\n            )\r\n            .focus();\r\n        }\r\n      }\r\n    });\r\n\r\n    //RENDERER SETUP\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: true,\r\n    });\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.renderer.shadowMap.type = THREE.PCFShadowMap;\r\n    this.renderer.physicallyCorrectLights = true;\r\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\r\n    this.renderer.toneMapping = THREE.ReinhardToneMapping;\r\n    this.renderer.toneMappingExposure = 1.5;\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n\r\n    this.renderer.setClearColor(0x000000, 0.0);\r\n\r\n    /**\r\n     * Post processing\r\n     */\r\n    let RenderTargetClass = null;\r\n\r\n    if (\r\n      this.renderer.getPixelRatio() === 1 &&\r\n      this.renderer.capabilities.isWebGL2\r\n    ) {\r\n      RenderTargetClass = THREE.WebGLMultisampleRenderTarget;\r\n      //console.log(\"Using WebGLMultisampleRenderTarget\");\r\n    } else {\r\n      RenderTargetClass = THREE.WebGLRenderTarget;\r\n      //console.log(\"Using WebGLRenderTarget\");\r\n    }\r\n\r\n    this.renderTarget = new RenderTargetClass(800, 600, {\r\n      minFilter: THREE.LinearFilter,\r\n      magFilter: THREE.LinearFilter,\r\n      format: THREE.RGBAFormat,\r\n      encoding: THREE.sRGBEncoding,\r\n      alpha: true,\r\n    });\r\n\r\n    // Effect composer\r\n    this.effectComposer = new EffectComposer(this.renderer, this.renderTarget);\r\n    this.effectComposer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n    this.effectComposer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    // Render pass\r\n    this.renderPass = new RenderPass(this.scene, this.camera);\r\n    this.effectComposer.addPass(this.renderPass);\r\n\r\n    this.unrealBloomPass = new UnrealBloomPass();\r\n    this.unrealBloomPass.enabled = true;\r\n    this.effectComposer.addPass(this.unrealBloomPass);\r\n\r\n    if (window.innerWidth < 768) {\r\n      this.unrealBloomPass.strength = 0.2;\r\n    } else {\r\n      this.unrealBloomPass.strength = 2.0;\r\n    }\r\n    this.unrealBloomPass.radius = 0.6;\r\n    this.unrealBloomPass.threshold = 0.0;\r\n\r\n    this.material = new THREE.MeshBasicMaterial({\r\n      color: 0xff0000,\r\n      wireframe: true,\r\n    });\r\n    this.geometry = new THREE.BoxGeometry(1, 1, 1, 20, 20, 20);\r\n\r\n    this.plane = new THREE.Mesh(this.geometry, this.material);\r\n\r\n    //this.scene.add(this.plane);\r\n    this.isPlane = true;\r\n\r\n    //RENDER LOOP AND WINDOW SIZE UPDATER SETUP\r\n    window.addEventListener(\"resize\", this.resizeCanvas);\r\n    this.addObjects();\r\n    this.time = 0;\r\n\r\n    container.appendChild(this.renderer.domElement);\r\n    this.update();\r\n  }\r\n\r\n  testFunction() {\r\n    if (this.isPlane) {\r\n      //console.log(this.plane.rotation.y);\r\n    }\r\n  }\r\n\r\n  addObjects() {\r\n    this.greyMatter = new Model({\r\n      meshName: \"GM_Body\",\r\n      file: GreyMatter,\r\n      scene: this.scene,\r\n      group: this.groupObjects,\r\n      loadOnStart: true,\r\n      particleIntensity: 0.025,\r\n      color1: new THREE.Color(\"#00f328\"),\r\n      color2: new THREE.Color(\"#678293\"),\r\n      myIndex: 0,\r\n      numParticles: 160000,\r\n      scaleDK: 2.2,\r\n      scaleMB: 1.5,\r\n      loadingManager: this.loadingManager,\r\n    });\r\n\r\n    this.kameHouse = new Model({\r\n      meshName: \"Kame_House\",\r\n      file: KameHouse,\r\n      scene: this.scene,\r\n      group: this.groupObjects,\r\n      particleIntensity: 0.025,\r\n      color1: new THREE.Color(\"#0071f9\"),\r\n      color2: new THREE.Color(\"#efc5e9\"),\r\n      myIndex: 1,\r\n      numParticles: 400000,\r\n      scaleDK: 1.9,\r\n      scaleMB: 1.2,\r\n      rotateOnEntry: true,\r\n      loadingManager: this.loadingManager,\r\n    });\r\n\r\n    this.mrMeesek = new Model({\r\n      meshName: \"Meesek_Body\",\r\n      file: MrMeesek,\r\n      scene: this.scene,\r\n      group: this.groupObjects,\r\n      particleIntensity: 0.015,\r\n      color1: new THREE.Color(\"#3c02e1\"),\r\n      color2: new THREE.Color(\"#00a2ab\"),\r\n      myIndex: 2,\r\n      numParticles: 140000,\r\n      scaleDK: 2.2,\r\n      scaleMB: 1.5,\r\n      loadingManager: this.loadingManager,\r\n    });\r\n\r\n    this.monster = new Model({\r\n      meshName: \"Monster_Body\",\r\n      file: Monster,\r\n      scene: this.scene,\r\n      group: this.groupObjects,\r\n      particleIntensity: 0.025,\r\n      color1: new THREE.Color(\"#FF69B4\"),\r\n      color2: new THREE.Color(\"#00d4b8\"),\r\n      myIndex: 3,\r\n      numParticles: 160000,\r\n      scaleDK: 2.2,\r\n      scaleMB: 1.4,\r\n      loadingManager: this.loadingManager,\r\n    });\r\n\r\n    this.psyduck = new Model({\r\n      meshName: \"Psy_Body\",\r\n      file: Psyduck,\r\n      scene: this.scene,\r\n      group: this.groupObjects,\r\n      particleIntensity: 0.035,\r\n      color1: new THREE.Color(\"#ad00bd\"),\r\n      color2: new THREE.Color(\"#fff23a\"),\r\n      myIndex: 4,\r\n      numParticles: 160000,\r\n      scaleDK: 2.2,\r\n      scaleMB: 1.4,\r\n      loadingManager: this.loadingManager,\r\n    });\r\n\r\n    this.victrebeel = new Model({\r\n      meshName: \"VC_Body\",\r\n      file: Victrebeel,\r\n      scene: this.scene,\r\n      group: this.groupObjects,\r\n      particleIntensity: 0.05,\r\n      color1: new THREE.Color(\"#499403\"),\r\n      color2: new THREE.Color(\"#f1e900\"),\r\n      myIndex: 5,\r\n      numParticles: 160000,\r\n      scaleDK: 2.2,\r\n      scaleMB: 1.3,\r\n      loadingManager: this.loadingManager,\r\n    });\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  changeSlider(index) {\r\n    this.index = index;\r\n\r\n    if (this.isLoaded) {\r\n      switch (index) {\r\n        case 0:\r\n          if (window.innerWidth < 768) {\r\n            this.unrealBloomPass.strength = 0.2;\r\n          } else {\r\n            this.unrealBloomPass.strength = 2.0;\r\n          }\r\n          this.unrealBloomPass.radius = 0.6;\r\n          this.kameHouse.removeModel();\r\n          this.mrMeesek.removeModel();\r\n          this.monster.removeModel();\r\n          this.psyduck.removeModel();\r\n          this.victrebeel.removeModel();\r\n          this.greyMatter.addModel();\r\n          break;\r\n        case 1:\r\n          if (window.innerWidth < 768) {\r\n            this.unrealBloomPass.strength = 0.2;\r\n          } else {\r\n            this.unrealBloomPass.strength = 2.0;\r\n          }\r\n          this.unrealBloomPass.radius = 0.6;\r\n          this.greyMatter.removeModel();\r\n          this.mrMeesek.removeModel();\r\n          this.monster.removeModel();\r\n          this.psyduck.removeModel();\r\n          this.victrebeel.removeModel();\r\n          this.kameHouse.addModel();\r\n          break;\r\n        case 2:\r\n          if (window.innerWidth < 768) {\r\n            this.unrealBloomPass.strength = 0.2;\r\n          } else {\r\n            this.unrealBloomPass.strength = 2.0;\r\n          }\r\n          this.unrealBloomPass.radius = 0.6;\r\n          this.greyMatter.removeModel();\r\n          this.kameHouse.removeModel();\r\n          this.monster.removeModel();\r\n          this.psyduck.removeModel();\r\n          this.victrebeel.removeModel();\r\n          this.mrMeesek.addModel();\r\n          break;\r\n\r\n        case 3:\r\n          if (window.innerWidth < 768) {\r\n            this.unrealBloomPass.strength = 0.2;\r\n          } else {\r\n            this.unrealBloomPass.strength = 2.3;\r\n          }\r\n          this.unrealBloomPass.radius = 0.6;\r\n          this.greyMatter.removeModel();\r\n          this.kameHouse.removeModel();\r\n          this.mrMeesek.removeModel();\r\n          this.psyduck.removeModel();\r\n          this.victrebeel.removeModel();\r\n          this.monster.addModel();\r\n          break;\r\n\r\n        case 4:\r\n          if (window.innerWidth < 768) {\r\n            this.unrealBloomPass.strength = 0.35;\r\n          } else {\r\n            this.unrealBloomPass.strength = 3.5;\r\n          }\r\n          this.unrealBloomPass.radius = 0.1;\r\n          this.greyMatter.removeModel();\r\n          this.kameHouse.removeModel();\r\n          this.mrMeesek.removeModel();\r\n          this.monster.removeModel();\r\n          this.victrebeel.removeModel();\r\n          this.psyduck.addModel();\r\n          break;\r\n\r\n        case 5:\r\n          if (window.innerWidth < 768) {\r\n            this.unrealBloomPass.strength = 0.2;\r\n          } else {\r\n            this.unrealBloomPass.strength = 3.5;\r\n          }\r\n          this.unrealBloomPass.radius = 0.1;\r\n          this.greyMatter.removeModel();\r\n          this.kameHouse.removeModel();\r\n          this.mrMeesek.removeModel();\r\n          this.monster.removeModel();\r\n          this.psyduck.removeModel();\r\n          this.victrebeel.addModel();\r\n          break;\r\n        default:\r\n          //Declaraciones ejecutadas cuando ninguno de los valores coincide con el valor de la expresión\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    requestAnimationFrame(this.update.bind(this));\r\n    this.time = this.clock.getElapsedTime();\r\n    this.greyMatter.update(this.time, this.index);\r\n    this.kameHouse.update(this.time, this.index);\r\n    this.mrMeesek.update(this.time, this.index);\r\n    this.monster.update(this.time, this.index);\r\n    this.psyduck.update(this.time, this.index);\r\n    this.victrebeel.update(this.time, this.index);\r\n    CamParallax.update();\r\n    //this.renderer.render(this.scene, this.camera);\r\n    this.effectComposer.render();\r\n  }\r\n\r\n  resizeCanvas() {\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.camera.aspect = window.innerWidth / window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n    this.effectComposer.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  bind() {\r\n    this.resizeCanvas = this.resizeCanvas.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.init = this.init.bind(this);\r\n    this.testFunction = this.testFunction.bind(this);\r\n    this.addObjects = this.addObjects.bind(this);\r\n  }\r\n}\r\n\r\nconst _instance = new MainScene();\r\nexport default _instance;\r\n","import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.min.css\";\n\nimport \"swiper/swiper.less\";\n\nimport \"swiper/components/effect-coverflow/effect-coverflow.scss\";\nimport SwiperCore from \"swiper\";\nimport { Navigation, Pagination, A11y } from \"swiper\";\n\nimport { EffectCoverflow } from \"swiper\";\n\nimport greyMatter_img from \"./assets/img/grey-matter.jpg\";\nimport kameHouse_img from \"./assets/img/kame-house.jpg\";\nimport meeseek_img from \"./assets/img/meeseek.jpg\";\nimport monster_img from \"./assets/img/monster.jpg\";\nimport psyudck_img from \"./assets/img/psyduck.jpg\";\nimport victrebeel_img from \"./assets/img/victreebel.jpg\";\n\nimport MainThree from \"./components/MainScene\";\n\nimport { FaBeer } from \"react-icons/fa\";\n\nimport {\n  FaLinkedin,\n  FaArtstation,\n  FaInstagram,\n  FaGithub,\n  FaInfoCircle,\n} from \"react-icons/fa\";\n\nimport {\n  SiLinkedin,\n  SiArtstation,\n  SiGithub,\n  SiInstagram,\n} from \"react-icons/si\";\n\nimport { AiOutlineLeft } from \"react-icons/ai\";\n\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\n\nimport { HiMenuAlt1 } from \"react-icons/hi\";\n\nimport { IoMdClose } from \"react-icons/io\";\n\nimport MainScene from \"./components/MainScene\";\n\nfunction App() {\n  SwiperCore.use([EffectCoverflow, Navigation]);\n\n  const refContainer = useRef(null);\n  const refLoadContainer = useRef(null);\n  const refLoadBar = useRef(null);\n  const navigationPrevRef = useRef(null);\n  const navigationNextRef = useRef(null);\n\n  useEffect(() => {\n    //console.log(\"loaded\");\n    MainThree.init(\n      refContainer.current,\n      refLoadContainer.current,\n      refLoadBar.current\n    );\n    // MainThree.testFunction();\n  }, []);\n\n  const [bgState, setBgState] = useState(\"GM\");\n  const [menuState, setMenuState] = useState(false);\n\n  const setSlide = (index) => {\n    MainThree.testFunction();\n\n    switch (index) {\n      case 0:\n        setBgState(\"GM\");\n\n        break;\n      case 1:\n        setBgState(\"KM\");\n\n        break;\n      case 2:\n        setBgState(\"MK\");\n\n        break;\n\n      case 3:\n        setBgState(\"MO\");\n\n        break;\n\n      case 4:\n        setBgState(\"PS\");\n\n        break;\n\n      case 5:\n        setBgState(\"VC\");\n\n        break;\n      default:\n        //Declaraciones ejecutadas cuando ninguno de los valores coincide con el valor de la expresión\n        break;\n    }\n\n    MainThree.changeSlider(index);\n    //console.log(\"is here\");\n  };\n  return (\n    <div className=\"App\">\n      <div ref={refLoadContainer} className=\"loader-container\">\n        <h2>Loading...</h2>\n        <h4>Loading all the assets </h4>\n        <div className=\"loading-bar\">\n          <div ref={refLoadBar} className=\"bar\"></div>\n        </div>\n      </div>\n\n      <div ref={refContainer} className=\"canvas-container\"></div>\n      <div\n        className={\n          menuState\n            ? `menu-mobile  active ${bgState}`\n            : `menu-mobile ${bgState}`\n        }\n      >\n        <div className=\"menu-item\">\n          <SiLinkedin className=\"icon\" size=\"1.4rem\" />\n          <a href=\"https://www.linkedin.com/in/andres-salaz/\" target=\"_blank\">\n            Linkedin{\" \"}\n          </a>\n        </div>\n        <div className=\"menu-item\">\n          <SiArtstation className=\"icon\" size=\"1.4rem\" />\n          <a href=\"https://www.artstation.com/elsalaz\" target=\"_blank\">\n            Artstation{\" \"}\n          </a>\n        </div>\n        <div className=\"menu-item\">\n          <SiGithub className=\"icon\" size=\"1.4rem\" />\n          <a href=\"https://github.com/devSalaz\" target=\"_blank\">\n            Github{\" \"}\n          </a>\n        </div>\n        <div className=\"menu-item\">\n          <SiInstagram className=\"icon\" size=\"1.4rem\" />\n          <a href=\"https://www.instagram.com/el.salaz/\" target=\"_blank\">\n            Instagram\n          </a>\n        </div>\n      </div>\n      <main className={bgState}>\n        <nav>\n          <h3>devAndres</h3>\n          {menuState ? (\n            <IoMdClose\n              size=\"1.4rem\"\n              className=\"menu-icon\"\n              onClick={() => setMenuState(!menuState)}\n            />\n          ) : (\n            <HiMenuAlt1\n              size=\"1.4rem\"\n              className=\"menu-icon\"\n              onClick={() => setMenuState(!menuState)}\n            />\n          )}\n\n          <ul>\n            <li>\n              <a\n                href=\"https://www.linkedin.com/in/andres-salaz/\"\n                target=\"_blank\"\n              >\n                <SiLinkedin size=\"1.4rem\" className={`nav-icon ${bgState}`} />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.artstation.com/elsalaz\" target=\"_blank\">\n                <SiArtstation size=\"1.4rem\" className={`nav-icon ${bgState}`} />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/devSalaz\" target=\"_blank\">\n                <SiGithub size=\"1.4rem\" className={`nav-icon ${bgState}`} />\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.instagram.com/el.salaz/\" target=\"_blank\">\n                <SiInstagram size=\"1.4rem\" className={`nav-icon ${bgState}`} />\n              </a>\n            </li>\n          </ul>\n        </nav>\n        <section>\n          <div className=\"absolute-container\">\n            <div\n              className={\n                bgState === \"GM\" ? \"content-model active\" : \"content-model\"\n              }\n            >\n              <h2>Grey Matter</h2>\n              <h4>\n                3D model of Grey Matter from Ben 10. This model was made in\n                maya, was made for a project in the University. Can be used in\n                Unity or any Game Engine, the rigging is from Mixamo. Watch in{\" \"}\n                <span>\n                  <a\n                    className=\"link GM\"\n                    href=\"https://www.artstation.com/artwork/mDDvrE\"\n                    target=\"_blank\"\n                  >\n                    Arstation.\n                  </a>\n                </span>\n                <br></br>\n                <br></br>\n                -Tris: 14.8k\n                <br></br>\n                -Vertices: 7.5k\n              </h4>\n            </div>\n            <div\n              className={\n                bgState === \"KM\" ? \"content-model active\" : \"content-model\"\n              }\n            >\n              <h2>Kame House</h2>\n              <h4>\n                3D model Kame House from Dragon Ball. This model was made in\n                maya, was made for a personal rendering project. Can be used in\n                Unity or any Game Engine. Watch in{\" \"}\n                <span>\n                  <a\n                    className=\"link KM\"\n                    href=\"https://www.artstation.com/artwork/Xn1kwY\"\n                    target=\"_blank\"\n                  >\n                    Arstation.\n                  </a>\n                </span>\n                <br></br>\n                <br></br>\n                -Tris: 40.4k\n                <br></br>\n                -Vertices: 23.1k\n              </h4>\n            </div>\n            <div\n              className={\n                bgState === \"MK\" ? \"content-model active\" : \"content-model\"\n              }\n            >\n              <h2>Mr Meesek</h2>\n              <h4>\n                3D model of Mr Meeseks from Rick and Morty. This model was made\n                in maya, was made for a personal AR project. Can be used in\n                Unity or any Game Engine but is too high poly, the rigging is\n                from Mixamo. Watch in{\" \"}\n                <span>\n                  <a\n                    className=\"link MK\"\n                    href=\"https://www.artstation.com/artwork/QrrwRd\"\n                    target=\"_blank\"\n                  >\n                    Arstation.\n                  </a>\n                </span>\n                <br></br>\n                <br></br>\n                -Tris: 84.5k\n                <br></br>\n                -Vertices: 42.6k\n              </h4>\n            </div>\n            <div\n              className={\n                bgState === \"MO\" ? \"content-model active\" : \"content-model\"\n              }\n            >\n              <h2>Pink Monster</h2>\n              <h4>\n                3D model of Monster concept found on internet. This model was\n                made in maya, was made for a personal Rendering project. Can be\n                used in Unity or any Game Engine. Watch in{\" \"}\n                <span>\n                  <a\n                    className=\"link MO\"\n                    href=\"https://www.artstation.com/artwork/AqqlZ5\"\n                    target=\"_blank\"\n                  >\n                    Arstation.\n                  </a>\n                </span>\n                <br></br>\n                <br></br>\n                -Tris: 83.5k\n                <br></br>\n                -Vertices: 41.9k\n              </h4>\n            </div>\n            <div\n              className={\n                bgState === \"PS\" ? \"content-model active\" : \"content-model\"\n              }\n            >\n              <h2>Psyduck</h2>\n              <h4>\n                3D model of Psyduck from Pokemon. This model was made in maya,\n                was made for a personal Rendering and web project. Watch in{\" \"}\n                <span>\n                  <a\n                    className=\"link PS\"\n                    href=\"https://www.artstation.com/artwork/ZGGdKm\"\n                    target=\"_blank\"\n                  >\n                    Arstation.\n                  </a>\n                </span>\n                <br></br>\n                <br></br>\n                -Tris: 147.3k\n                <br></br>\n                -Vertices: 73.7k\n              </h4>\n            </div>\n            <div\n              className={\n                bgState === \"VC\" ? \"content-model active\" : \"content-model\"\n              }\n            >\n              <h2>Victreebel</h2>\n              <h4>\n                3D model of Victreebel from Pokemon. This model was made in\n                maya, was made for a personal Rendering project. Can be used in\n                Unity or any Game Engine. Watch in{\" \"}\n                <span>\n                  <a\n                    className=\"link VC\"\n                    href=\"https://www.artstation.com/artwork/zOOK5L\"\n                    target=\"_blank\"\n                  >\n                    Arstation.\n                  </a>\n                </span>\n                <br></br>\n                <br></br>\n                -Tris: 11.8k\n                <br></br>\n                -Vertices: 6k\n              </h4>\n            </div>\n          </div>\n\n          <div className=\"container-bottom\">\n            <h4>\n              Coding by{\" \"}\n              <span>\n                <a\n                  className={`coding-text ${bgState}`}\n                  href=\"https://www.linkedin.com/in/andres-salaz/\"\n                  target=\"_blank\"\n                >\n                  Andrés Salazar\n                </a>\n              </span>\n            </h4>\n            <div className={\"slider-container\"}>\n              <div ref={navigationPrevRef} className={`slide-left ${bgState}`}>\n                <BiChevronLeft\n                  size=\"1.6rem\"\n                  className={`icon-slider ${bgState}`}\n                />\n              </div>\n              <div ref={navigationNextRef} className={`slide-right ${bgState}`}>\n                {\" \"}\n                <BiChevronRight\n                  size=\"1.6rem\"\n                  className={`icon-slider ${bgState}`}\n                />\n              </div>\n              <Swiper\n                modules={[Navigation, Pagination, EffectCoverflow, A11y]}\n                spaceBetween={0}\n                slidesPerView={\"auto\"}\n                navigation={{\n                  prevEl: navigationPrevRef.current,\n                  nextEl: navigationNextRef.current,\n                }}\n                onBeforeInit={(swiper) => {\n                  swiper.params.navigation.prevEl = navigationPrevRef.current;\n                  swiper.params.navigation.nextEl = navigationNextRef.current;\n                }}\n                effect={\"coverflow\"}\n                centeredSlides={true}\n                loop={true}\n                coverflowEffect={{\n                  rotate: 50,\n                  stretch: 0,\n                  depth: 100,\n                  modifier: 1,\n                  slideShadows: false,\n                }}\n                onSlideChange={(swiper) => setSlide(swiper.realIndex)}\n                // onSwiper={(swiper) => console.log(swiper)}\n              >\n                <SwiperSlide>\n                  <img\n                    className=\"img-slide\"\n                    src={greyMatter_img}\n                    alt=\"grey-matter\"\n                  />\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img\n                    className=\"img-slide\"\n                    src={kameHouse_img}\n                    alt=\"kame-house\"\n                  />\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img className=\"img-slide\" src={meeseek_img} alt=\"meeseek\" />\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img className=\"img-slide\" src={monster_img} alt=\"monster\" />\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img className=\"img-slide\" src={psyudck_img} alt=\"psyduck\" />\n                </SwiperSlide>\n                <SwiperSlide>\n                  <img\n                    className=\"img-slide\"\n                    src={victrebeel_img}\n                    alt=\"victreebel\"\n                  />\n                </SwiperSlide>\n              </Swiper>\n            </div>\n            {/* <FaInfoCircle size=\"1.5rem\" className=\"info-icon\" /> */}\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}